{
#include <stdlib>
  TCanvas *c1 = new TCanvas("c1","c1",1301,333,620,544);
  gStyle->SetOptStat(0);
  gStyle->SetOptTitle(0);
  gStyle->SetPalette(1);
  c1->Range(-0.125,-0.125,1.125,1.125);
  c1->SetFillColor(0);
  c1->SetBorderSize(0);
  c1->SetTickx(1);
  c1->SetTicky(1);
  c1->SetFrameFillColor(0);
  c1->SetFrameBorderMode(0);
  TFile *f1 = TFile::Open("bbb.root");
  /*
  TH2F *eleHFecalrej = (TH2F*)f1->FindObjectAny("ele_HF__ecal__rej");
  eleHFecalrej->SetMarkerColor(3);
  eleHFecalrej->SetMarkerStyle(21);
  eleHFecalrej->SetMarkerSize(0.8);
  eleHFecalrej->GetXaxis()->SetTitle("Heavy Flavor electron rejection");
  eleHFecalrej->GetXaxis()->SetLabelFont(42);
  eleHFecalrej->GetXaxis()->SetTitleFont(42);
  eleHFecalrej->GetYaxis()->SetTitle("Prompt muon efficiency");
  eleHFecalrej->GetYaxis()->SetLabelFont(42);
  eleHFecalrej->GetYaxis()->SetTitleFont(42);
  eleHFecalrej->Draw("");
  TH2F *eleHFhcalrej = (TH2F*)f1->FindObjectAny("ele_HF__hcal__rej");
  eleHFhcalrej->SetMarkerColor(4);
  eleHFhcalrej->SetMarkerStyle(22);
  eleHFhcalrej->SetMarkerSize(0.9);
  eleHFhcalrej->Draw("SAME");
  TH2F *eleHFtrackrej = (TH2F*)f1->FindObjectAny("ele_HF__track__rej");
  eleHFtrackrej->SetMarkerColor(2);
  eleHFtrackrej->SetMarkerStyle(20);
  eleHFtrackrej->SetMarkerSize(0.8);
  eleHFtrackrej->Draw("SAME");
  TH2F *eleHFtotrej = (TH2F*)f1->FindObjectAny("ele_HF__tot__rej");
  eleHFtotrej->SetMarkerColor(6);
  eleHFtotrej->SetMarkerStyle(23);
  eleHFtotrej->SetMarkerSize(0.8);
  eleHFtotrej->Draw("SAME");
  TPaveText *pt = new TPaveText(4.886853,3.185037,10.4903,3.468671,"br");
  pt->SetBorderSize(0);
  pt->SetFillColor(19);
  pt->SetTextColor(2);
  pt->SetTextFont(42);
  TText *text = pt->AddText("Standard Reco");
  pt->Draw();
  tex = new TLatex(0.05357142,1.039883,"Standard Reco");
  tex->SetTextColor(2);
  tex->SetTextFont(42);
  tex->SetLineWidth(2);
  tex->Draw();
  c1->SaveAs("electron_prompt_eff_vs_HF_rej.gif");
  c1->cd();
  TH2F *elefakeecalrej = (TH2F*)f1->FindObjectAny("ele_fake__ecal__rej");
  elefakeecalrej->SetMarkerColor(3);
  elefakeecalrej->SetMarkerStyle(21);
  elefakeecalrej->SetMarkerSize(0.8);
  elefakeecalrej->GetXaxis()->SetTitle("Fake electron rejection");
  elefakeecalrej->GetXaxis()->SetLabelFont(42);
  elefakeecalrej->GetXaxis()->SetTitleFont(42);
  elefakeecalrej->GetYaxis()->SetTitle("Prompt muon efficiency");
  elefakeecalrej->GetYaxis()->SetLabelFont(42);
  elefakeecalrej->GetYaxis()->SetTitleFont(42);
  elefakeecalrej->Draw("");
  TH2F *elefakehcalrej = (TH2F*)f1->FindObjectAny("ele_fake__hcal__rej");
  elefakehcalrej->SetMarkerColor(4);
  elefakehcalrej->SetMarkerStyle(22);
  elefakehcalrej->SetMarkerSize(0.9);
  elefakehcalrej->Draw("SAME");
  TH2F *elefaketrackrej = (TH2F*)f1->FindObjectAny("ele_fake__track__rej");
  elefaketrackrej->SetMarkerColor(2);
  elefaketrackrej->SetMarkerStyle(20);
  elefaketrackrej->SetMarkerSize(0.8);
  elefaketrackrej->Draw("SAME");
  TH2F *elefaketotrej = (TH2F*)f1->FindObjectAny("ele_fake__tot__rej");
  elefaketotrej->SetMarkerColor(6);
  elefaketotrej->SetMarkerStyle(23);
  elefaketotrej->SetMarkerSize(0.8);
  elefaketotrej->Draw("SAME");
  TPaveText *pt = new TPaveText(4.886853,3.185037,10.4903,3.468671,"br");
  pt->SetBorderSize(0);
  pt->SetFillColor(19);
  pt->SetTextColor(2);
  pt->SetTextFont(42);
  TText *text = pt->AddText("Standard Reco");
  pt->Draw();
  tex = new TLatex(0.05357142,1.039883,"Standard Reco");
  tex->SetTextColor(2);
  tex->SetTextFont(42);
  tex->SetLineWidth(2);
  tex->Draw();
  c1->SaveAs("electron_prompt_eff_vs_fake_rej.gif");
  c1->cd();
  TH2F *muHFecalrej = (TH2F*)f1->FindObjectAny("muo_HF__ecal__rej");
  muHFecalrej->SetMarkerColor(3);
  muHFecalrej->SetMarkerStyle(21);
  muHFecalrej->SetMarkerSize(0.8);
  muHFecalrej->GetXaxis()->SetTitle("Heavy Flavour muon rejection");
  muHFecalrej->GetXaxis()->SetLabelFont(42);
  muHFecalrej->GetXaxis()->SetTitleFont(42);
  muHFecalrej->GetYaxis()->SetTitle("Prompt muon efficiency");
  muHFecalrej->GetYaxis()->SetLabelFont(42);
  muHFecalrej->GetYaxis()->SetTitleFont(42);
  muHFecalrej->Draw("");
  TH2F *muHFhcalrej = (TH2F*)f1->FindObjectAny("muo_HF__hcal__rej");
  muHFhcalrej->SetMarkerColor(4);
  muHFhcalrej->SetMarkerStyle(22);
  muHFhcalrej->SetMarkerSize(0.9);
  muHFhcalrej->Draw("SAME");
  TH2F *muHFtrackrej = (TH2F*)f1->FindObjectAny("muo_HF__track__rej");
  muHFtrackrej->SetMarkerColor(2);
  muHFtrackrej->SetMarkerStyle(20);
  muHFtrackrej->SetMarkerSize(0.8);
  muHFtrackrej->Draw("SAME");
  TH2F *muHFtotrej = (TH2F*)f1->FindObjectAny("muo_HF__tot__rej");
  muHFtotrej->SetMarkerColor(6);
  muHFtotrej->SetMarkerStyle(23);
  muHFtotrej->SetMarkerSize(0.8);
  muHFtotrej->Draw("SAME");
  TPaveText *pt = new TPaveText(4.886853,3.185037,10.4903,3.468671,"br");
  pt->SetBorderSize(0);
  pt->SetFillColor(19);
  pt->SetTextColor(2);
  pt->SetTextFont(42);
  TText *text = pt->AddText("Standard Reco");
  pt->Draw();
  tex = new TLatex(0.05357142,1.039883,"Standard Reco");
  tex->SetTextColor(2);
  tex->SetTextFont(42);
  tex->SetLineWidth(2);
  tex->Draw();
  c1->SaveAs("muon_prompt_eff_vs_HF_rej.gif");
  c1->cd();
  TH2F *mufakeecalrej = (TH2F*)f1->FindObjectAny("muo_fake__ecal__rej");
  mufakeecalrej->SetMarkerColor(3);
  mufakeecalrej->SetMarkerStyle(21);
  mufakeecalrej->SetMarkerSize(0.8);
  mufakeecalrej->GetXaxis()->SetTitle("Fake muon rejection");
  mufakeecalrej->GetXaxis()->SetLabelFont(42);
  mufakeecalrej->GetXaxis()->SetTitleFont(42);
  mufakeecalrej->GetYaxis()->SetTitle("Prompt muon efficiency");
  mufakeecalrej->GetYaxis()->SetLabelFont(42);
  mufakeecalrej->GetYaxis()->SetTitleFont(42);
  mufakeecalrej->Draw("");
  TH2F *mufakehcalrej = (TH2F*)f1->FindObjectAny("muo_fake__hcal__rej");
  mufakehcalrej->SetMarkerColor(4);
  mufakehcalrej->SetMarkerStyle(22);
  mufakehcalrej->SetMarkerSize(0.9);
  mufakehcalrej->Draw("SAME");
  TH2F *mufaketrackrej = (TH2F*)f1->FindObjectAny("muo_fake__track__rej");
  mufaketrackrej->SetMarkerColor(2);
  mufaketrackrej->SetMarkerStyle(20);
  mufaketrackrej->SetMarkerSize(0.8);
  mufaketrackrej->Draw("SAME");
  TH2F *mufaketotrej = (TH2F*)f1->FindObjectAny("muo_fake__tot__rej");
  mufaketotrej->SetMarkerColor(6);
  mufaketotrej->SetMarkerStyle(23);
  mufaketotrej->SetMarkerSize(0.8);
  mufaketotrej->Draw("SAME");
  TPaveText *pt = new TPaveText(4.886853,3.185037,10.4903,3.468671,"br");
  pt->SetBorderSize(0);
  pt->SetFillColor(19);
  pt->SetTextColor(2);
  pt->SetTextFont(42);
  TText *text = pt->AddText("Standard Reco");
  pt->Draw();
  tex = new TLatex(0.05357142,1.039883,"Standard Reco");
  tex->SetTextColor(2);
  tex->SetTextFont(42);
  tex->SetLineWidth(2);
  tex->Draw();
  c1->SaveAs("muon_prompt_eff_vs_fake_rej.gif");
  c1->cd();
  */
  TH2F *pfeleHFChHadrej = (TH2F*)f1->FindObjectAny("pfele_HF__ChHad__rej");
  pfeleHFChHadrej->SetMarkerColor(3);
  pfeleHFChHadrej->SetMarkerStyle(21);
  pfeleHFChHadrej->SetMarkerSize(0.8);
  pfeleHFChHadrej->GetXaxis()->SetTitle("Heavy Flavour electron rejection");
  pfeleHFChHadrej->GetXaxis()->SetLabelFont(42);
  pfeleHFChHadrej->GetXaxis()->SetTitleFont(42);
  pfeleHFChHadrej->GetYaxis()->SetTitle("Prompt electron efficiency");
  pfeleHFChHadrej->GetYaxis()->SetLabelFont(42);
  pfeleHFChHadrej->GetYaxis()->SetTitleFont(42);
  pfeleHFChHadrej->Draw("");
  TH2F *pfeleHFNeHadrej = (TH2F*)f1->FindObjectAny("pfele_HF__NeHad__rej");
  pfeleHFNeHadrej->SetMarkerColor(4);
  pfeleHFNeHadrej->SetMarkerStyle(22);
  pfeleHFNeHadrej->SetMarkerSize(0.9);
  pfeleHFNeHadrej->Draw("SAME");
  TH2F *pfeleHFGamrej = (TH2F*)f1->FindObjectAny("pfele_HF__Gam__rej");
  pfeleHFGamrej->SetMarkerColor(2);
  pfeleHFGamrej->SetMarkerStyle(20);
  pfeleHFGamrej->SetMarkerSize(0.8);
  pfeleHFGamrej->Draw("SAME");
  TH2F *pfeleHFtotrej = (TH2F*)f1->FindObjectAny("pfele_HF__tot__rej");
  pfeleHFtotrej->SetMarkerColor(6);
  pfeleHFtotrej->SetMarkerStyle(23);
  pfeleHFtotrej->SetMarkerSize(0.8);
  pfeleHFtotrej->Draw("SAME");
  TPaveText *pt = new TPaveText(4.886853,3.185037,10.4903,3.468671,"br");
  pt->SetBorderSize(0);
  pt->SetFillColor(19);
  pt->SetTextColor(2);
  pt->SetTextFont(42);
  TText *text = pt->AddText("Particle Flow");
  pt->Draw();
  tex = new TLatex(0.05357142,1.039883,"Particle Flow");
  tex->SetTextColor(2);
  tex->SetTextFont(42);
  tex->SetLineWidth(2);
  tex->Draw();
  c1->SaveAs("pfelectron_prompt_eff_vs_HF_rej.gif");
  c1->cd();
  TH2F *pfelefakeChHadrej = (TH2F*)f1->FindObjectAny("pfele_fake__ChHad__rej");
  pfelefakeChHadrej->SetMarkerColor(3);
  pfelefakeChHadrej->SetMarkerStyle(21);
  pfelefakeChHadrej->SetMarkerSize(0.8);
  pfelefakeChHadrej->GetXaxis()->SetTitle("Fake electron rejection");
  pfelefakeChHadrej->GetXaxis()->SetLabelFont(42);
  pfelefakeChHadrej->GetXaxis()->SetTitleFont(42);
  pfelefakeChHadrej->GetYaxis()->SetTitle("Prompt electron efficiency");
  pfelefakeChHadrej->GetYaxis()->SetLabelFont(42);
  pfelefakeChHadrej->GetYaxis()->SetTitleFont(42);
  pfelefakeChHadrej->Draw("");
  TH2F *pfelefakeNeHadrej = (TH2F*)f1->FindObjectAny("pfele_fake__NeHad__rej");
  pfelefakeNeHadrej->SetMarkerColor(4);
  pfelefakeNeHadrej->SetMarkerStyle(22);
  pfelefakeNeHadrej->SetMarkerSize(0.9);
  pfelefakeNeHadrej->Draw("SAME");
  TH2F *pfelefakeGamrej = (TH2F*)f1->FindObjectAny("pfele_fake__Gam__rej");
  pfelefakeGamrej->SetMarkerColor(2);
  pfelefakeGamrej->SetMarkerStyle(20);
  pfelefakeGamrej->SetMarkerSize(0.8);
  pfelefakeGamrej->Draw("SAME");
  TH2F *pfelefaketotrej = (TH2F*)f1->FindObjectAny("pfele_fake__tot__rej");
  pfelefaketotrej->SetMarkerColor(6);
  pfelefaketotrej->SetMarkerStyle(23);
  pfelefaketotrej->SetMarkerSize(0.8);
  pfelefaketotrej->Draw("SAME");
  TPaveText *pt = new TPaveText(4.886853,3.185037,10.4903,3.468671,"br");
  pt->SetBorderSize(0);
  pt->SetFillColor(19);
  pt->SetTextColor(2);
  pt->SetTextFont(42);
  TText *text = pt->AddText("Particle Flow");
  pt->Draw();
  tex = new TLatex(0.05357142,1.039883,"Particle Flow");
  tex->SetTextColor(2);
  tex->SetTextFont(42);
  tex->SetLineWidth(2);
  tex->Draw();
  c1->SaveAs("pfelectron_prompt_eff_vs_fake_rej.gif");
  c1->cd();
  TH2F *pfmuHFChHadrej = (TH2F*)f1->FindObjectAny("pfmuo_HF__ChHad__rej");
  pfmuHFChHadrej->SetMarkerColor(3);
  pfmuHFChHadrej->SetMarkerStyle(21);
  pfmuHFChHadrej->SetMarkerSize(0.8);
  pfmuHFChHadrej->GetXaxis()->SetTitle("Heavy Flavour muon rejection");
  pfmuHFChHadrej->GetXaxis()->SetLabelFont(42);
  pfmuHFChHadrej->GetXaxis()->SetTitleFont(42);
  pfmuHFChHadrej->GetYaxis()->SetTitle("Prompt muon efficiency");
  pfmuHFChHadrej->GetYaxis()->SetLabelFont(42);
  pfmuHFChHadrej->GetYaxis()->SetTitleFont(42);
  pfmuHFChHadrej->Draw("");
  TH2F *pfmuHFNeHadrej = (TH2F*)f1->FindObjectAny("pfmuo_HF__NeHad__rej");
  pfmuHFNeHadrej->SetMarkerColor(4);
  pfmuHFNeHadrej->SetMarkerStyle(22);
  pfmuHFNeHadrej->SetMarkerSize(0.9);
  pfmuHFNeHadrej->Draw("SAME");
  TH2F *pfmuHFGamrej = (TH2F*)f1->FindObjectAny("pfmuo_HF__Gam__rej");
  pfmuHFGamrej->SetMarkerColor(2);
  pfmuHFGamrej->SetMarkerStyle(20);
  pfmuHFGamrej->SetMarkerSize(0.8);
  pfmuHFGamrej->Draw("SAME");
  TH2F *pfmuHFtotrej = (TH2F*)f1->FindObjectAny("pfmuo_HF__tot__rej");
  pfmuHFtotrej->SetMarkerColor(6);
  pfmuHFtotrej->SetMarkerStyle(23);
  pfmuHFtotrej->SetMarkerSize(0.8);
  pfmuHFtotrej->Draw("SAME");
  TPaveText *pt = new TPaveText(4.886853,3.185037,10.4903,3.468671,"br");
  pt->SetBorderSize(0);
  pt->SetFillColor(19);
  pt->SetTextColor(2);
  pt->SetTextFont(42);
  TText *text = pt->AddText("Particle Flow");
  pt->Draw();
  tex = new TLatex(0.05357142,1.039883,"Particle Flow");
  tex->SetTextColor(2);
  tex->SetTextFont(42);
  tex->SetLineWidth(2);
  tex->Draw();
  c1->SaveAs("pfmuon_prompt_eff_vs_HF_rej.gif");
  c1->cd();
  TH2F *pfmufakeChHadrej = (TH2F*)f1->FindObjectAny("pfmuo_fake__ChHad__rej");
  pfmufakeChHadrej->SetMarkerColor(3);
  pfmufakeChHadrej->SetMarkerStyle(21);
  pfmufakeChHadrej->SetMarkerSize(0.8);  
  pfmufakeChHadrej->GetXaxis()->SetTitle("Fake muon rejection");
  pfmufakeChHadrej->GetXaxis()->SetLabelFont(42);
  pfmufakeChHadrej->GetXaxis()->SetTitleFont(42);
  pfmufakeChHadrej->GetYaxis()->SetTitle("Prompt muon efficiency");
  pfmufakeChHadrej->GetYaxis()->SetLabelFont(42);
  pfmufakeChHadrej->GetYaxis()->SetTitleFont(42);
  pfmufakeChHadrej->Draw("");
  TH2F *pfmufakeNeHadrej = (TH2F*)f1->FindObjectAny("pfmuo_fake__NeHad__rej");
  pfmufakeNeHadrej->SetMarkerColor(4);
  pfmufakeNeHadrej->SetMarkerStyle(22);
  pfmufakeNeHadrej->SetMarkerSize(0.9);
  pfmufakeNeHadrej->Draw("SAME");
  TH2F *pfmufakeGamrej = (TH2F*)f1->FindObjectAny("pfmuo_fake__Gam__rej");
  pfmufakeGamrej->SetMarkerColor(2);
  pfmufakeGamrej->SetMarkerStyle(20);
  pfmufakeGamrej->SetMarkerSize(0.8);
  pfmufakeGamrej->Draw("SAME");
  TH2F *pfmufaketotrej = (TH2F*)f1->FindObjectAny("pfmuo_fake__tot__rej");
  pfmufaketotrej->SetMarkerColor(6);
  pfmufaketotrej->SetMarkerStyle(23);
  pfmufaketotrej->SetMarkerSize(0.8);
  pfmufaketotrej->Draw("SAME");
  TPaveText *pt = new TPaveText(4.886853,3.185037,10.4903,3.468671,"br");
  pt->SetBorderSize(0);
  pt->SetFillColor(19);
  pt->SetTextColor(2);
  pt->SetTextFont(42);
  TText *text = pt->AddText("Particle Flow");
  pt->Draw();
  tex = new TLatex(0.05357142,1.039883,"Particle Flow");
  tex->SetTextColor(2);
  tex->SetTextFont(42);
  tex->SetLineWidth(2);
  tex->Draw();
  c1->SaveAs("pfmuon_prompt_eff_vs_fake_rej.gif");
  c1->cd();
  c1->SetRightMargin(0.21192661);
  /*
  TH2F *eleHFCombinedIsovsPt = (TH2F*)f1->FindObjectAny("ele_HF_CombinedIsovsPt");
  eleHFCombinedIsovsPt->Draw();
  TPaletteAxis *palette = new TPaletteAxis(30.29354,-4.329634e-10,32.05479,1,ele_HF_CombinedIsovsPt);
  palette->SetLabelColor(1);
  palette->SetLabelFont(42);
  palette->SetLabelOffset(0.005);
  palette->SetLabelSize(0.04);
  palette->SetTitleOffset(1);
  palette->SetTitleSize(0.04);
  palette->SetFillColor(100);
  palette->SetFillStyle(1001);
  eleHFCombinedIsovsPt->GetListOfFunctions()->Add(palette,"br");
  eleHFCombinedIsovsPt->GetXaxis()->SetTitle("Heavy Flavour Electron Pt GeV");
  eleHFCombinedIsovsPt->GetXaxis()->SetLabelFont(42);
  eleHFCombinedIsovsPt->GetXaxis()->SetTitleFont(42);
  eleHFCombinedIsovsPt->GetYaxis()->SetTitle("Combined Relative Isolation");
  eleHFCombinedIsovsPt->GetYaxis()->SetLabelFont(42);
  eleHFCombinedIsovsPt->GetYaxis()->SetTitleFont(42);
  eleHFCombinedIsovsPt->DrawNormalized("COLZ ");
  tex = new TLatex(0.05357142,1.039883,"Standard Reco");
  tex->SetTextColor(2);
  tex->SetTextFont(42);
  tex->SetLineWidth(2);
  tex->Draw();
  c1->SaveAs("HF_Electron_Combined_Relative_Isolation_SR.gif");
  c1->cd();
  TH2F *elefakeCombinedIsovsPt = (TH2F*)f1->FindObjectAny("ele_fake_CombinedIsovsPt");
  elefakeCombinedIsovsPt->Draw();
  TPaletteAxis *palette = new TPaletteAxis(30.29354,-4.329634e-10,32.05479,1,ele_fake_CombinedIsovsPt);
  palette->SetLabelColor(1);
  palette->SetLabelFont(42);
  palette->SetLabelOffset(0.005);
  palette->SetLabelSize(0.04);
  palette->SetTitleOffset(1);
  palette->SetTitleSize(0.04);
  palette->SetFillColor(100);
  palette->SetFillStyle(1001);
  elefakeCombinedIsovsPt->GetListOfFunctions()->Add(palette,"br");
  elefakeCombinedIsovsPt->GetXaxis()->SetTitle("Fake Electron Pt GeV");
  elefakeCombinedIsovsPt->GetXaxis()->SetLabelFont(42);
  elefakeCombinedIsovsPt->GetXaxis()->SetTitleFont(42);
  elefakeCombinedIsovsPt->GetYaxis()->SetTitle("Combined Relative Isolation");
  elefakeCombinedIsovsPt->GetYaxis()->SetLabelFont(42);
  elefakeCombinedIsovsPt->GetYaxis()->SetTitleFont(42);
  elefakeCombinedIsovsPt->DrawNormalized("COLZ ");
  tex = new TLatex(0.05357142,1.039883,"Standard Reco");
  tex->SetTextColor(2);
  tex->SetTextFont(42);
  tex->SetLineWidth(2);
  tex->Draw();
  c1->SaveAs("fake_Electron_Combined_Relative_Isolation_SR.gif");
  c1->cd();
  TH2F *elepromptCombinedIsovsPt = (TH2F*)f1->FindObjectAny("ele_prompt_CombinedIsovsPt");
  elepromptCombinedIsovsPt->Draw();
  TPaletteAxis *palette = new TPaletteAxis(30.29354,-4.329634e-10,32.05479,1,ele_prompt_CombinedIsovsPt);
  palette->SetLabelColor(1);
  palette->SetLabelFont(42);
  palette->SetLabelOffset(0.005);
  palette->SetLabelSize(0.04);
  palette->SetTitleOffset(1);
  palette->SetTitleSize(0.04);
  palette->SetFillColor(100);
  palette->SetFillStyle(1001);
  elepromptCombinedIsovsPt->GetListOfFunctions()->Add(palette,"br");
  elepromptCombinedIsovsPt->GetXaxis()->SetTitle("Prompt Electron Pt GeV");
  elepromptCombinedIsovsPt->GetXaxis()->SetLabelFont(42);
  elepromptCombinedIsovsPt->GetXaxis()->SetTitleFont(42);
  elepromptCombinedIsovsPt->GetYaxis()->SetTitle("Combined Relative Isolation");
  elepromptCombinedIsovsPt->GetYaxis()->SetLabelFont(42);
  elepromptCombinedIsovsPt->GetYaxis()->SetTitleFont(42);
  elepromptCombinedIsovsPt->DrawNormalized("COLZ ");
  tex = new TLatex(0.05357142,1.039883,"Standard Reco");
  tex->SetTextColor(2);
  tex->SetTextFont(42);
  tex->SetLineWidth(2);
  tex->Draw();
  c1->SaveAs("prompt_Electron_Combined_Relative_Isolation_SR.gif");
  c1->cd();
  TH2F *muHFCombinedIsovsPt = (TH2F*)f1->FindObjectAny("mu_HF_CombinedIsovsPt");
  muHFCombinedIsovsPt->Draw();
  TPaletteAxis *palette = new TPaletteAxis(30.29354,-4.329634e-10,32.05479,1,mu_HF_CombinedIsovsPt);
  palette->SetLabelColor(1);
  palette->SetLabelFont(42);
  palette->SetLabelOffset(0.005);
  palette->SetLabelSize(0.04);
  palette->SetTitleOffset(1);
  palette->SetTitleSize(0.04);
  palette->SetFillColor(100);
  palette->SetFillStyle(1001);
  muHFCombinedIsovsPt->GetListOfFunctions()->Add(palette,"br");
  muHFCombinedIsovsPt->GetXaxis()->SetTitle("Heavy Flavour Muon Pt GeV");
  muHFCombinedIsovsPt->GetXaxis()->SetLabelFont(42);
  muHFCombinedIsovsPt->GetXaxis()->SetTitleFont(42);
  muHFCombinedIsovsPt->GetYaxis()->SetTitle("Combined Relative Isolation");
  muHFCombinedIsovsPt->GetYaxis()->SetLabelFont(42);
  muHFCombinedIsovsPt->GetYaxis()->SetTitleFont(42);
  muHFCombinedIsovsPt->DrawNormalized("COLZ ");
  tex = new TLatex(0.05357142,1.039883,"Standard Reco");
  tex->SetTextColor(2);
  tex->SetTextFont(42);
  tex->SetLineWidth(2);
  tex->Draw();
  c1->SaveAs("HF_Muon_Combined_Relative_Isolation_SR.gif");
  c1->cd();
  TH2F *mufakeCombinedIsovsPt = (TH2F*)f1->FindObjectAny("mu_fake_CombinedIsovsPt");
  mufakeCombinedIsovsPt->Draw();
  TPaletteAxis *palette = new TPaletteAxis(30.29354,-4.329634e-10,32.05479,1,mu_fake_CombinedIsovsPt);
  palette->SetLabelColor(1);
  palette->SetLabelFont(42);
  palette->SetLabelOffset(0.005);
  palette->SetLabelSize(0.04);
  palette->SetTitleOffset(1);
  palette->SetTitleSize(0.04);
  palette->SetFillColor(100);
  palette->SetFillStyle(1001);
  mufakeCombinedIsovsPt->GetListOfFunctions()->Add(palette,"br");
  mufakeCombinedIsovsPt->GetXaxis()->SetTitle("Fake Muon Pt GeV");
  mufakeCombinedIsovsPt->GetXaxis()->SetLabelFont(42);
  mufakeCombinedIsovsPt->GetXaxis()->SetTitleFont(42);
  mufakeCombinedIsovsPt->GetYaxis()->SetTitle("Combined Relative Isolation");
  mufakeCombinedIsovsPt->GetYaxis()->SetLabelFont(42);
  mufakeCombinedIsovsPt->GetYaxis()->SetTitleFont(42);
  mufakeCombinedIsovsPt->DrawNormalized("COLZ ");
  tex = new TLatex(0.05357142,1.039883,"Standard Reco");
  tex->SetTextColor(2);
  tex->SetTextFont(42);
  tex->SetLineWidth(2);
  tex->Draw();
  c1->SaveAs("fake_Muon_Combined_Relative_Isolation_SR.gif");
  c1->cd();
  TH2F *mupromptCombinedIsovsPt = (TH2F*)f1->FindObjectAny("mu_prompt_CombinedIsovsPt");
  mupromptCombinedIsovsPt->Draw();
  TPaletteAxis *palette = new TPaletteAxis(30.29354,-4.329634e-10,32.05479,1,mu_prompt_CombinedIsovsPt);
  palette->SetLabelColor(1);
  palette->SetLabelFont(42);
  palette->SetLabelOffset(0.005);
  palette->SetLabelSize(0.04);
  palette->SetTitleOffset(1);
  palette->SetTitleSize(0.04);
  palette->SetFillColor(100);
  palette->SetFillStyle(1001);
  mupromptCombinedIsovsPt->GetListOfFunctions()->Add(palette,"br");
  mupromptCombinedIsovsPt->GetXaxis()->SetTitle("Prompt Muon Pt GeV");
  mupromptCombinedIsovsPt->GetXaxis()->SetLabelFont(42);
  mupromptCombinedIsovsPt->GetXaxis()->SetTitleFont(42);
  mupromptCombinedIsovsPt->GetYaxis()->SetTitle("Combined Relative Isolation");
  mupromptCombinedIsovsPt->GetYaxis()->SetLabelFont(42);
  mupromptCombinedIsovsPt->GetYaxis()->SetTitleFont(42);
  mupromptCombinedIsovsPt->DrawNormalized("COLZ ");
  tex = new TLatex(0.05357142,1.039883,"Standard Reco");
  tex->SetTextColor(2);
  tex->SetTextFont(42);
  tex->SetLineWidth(2);
  tex->Draw();
  c1->SaveAs("prompt_Muon_Combined_Relative_Isolation_SR.gif");
  c1->cd();
  */
  TH2F *pfeleHFCombinedIsovsPt = (TH2F*)f1->FindObjectAny("pfele_HF_CombinedIsovsPt");
  pfeleHFCombinedIsovsPt->Draw();
  TPaletteAxis *palette = new TPaletteAxis(30.29354,-4.329634e-10,32.05479,1,pfele_HF_CombinedIsovsPt);
  palette->SetLabelColor(1);
  palette->SetLabelFont(42);
  palette->SetLabelOffset(0.005);
  palette->SetLabelSize(0.04);
  palette->SetTitleOffset(1);
  palette->SetTitleSize(0.04);
  palette->SetFillColor(100);
  palette->SetFillStyle(1001);
  pfeleHFCombinedIsovsPt->GetListOfFunctions()->Add(palette,"br");
  pfeleHFCombinedIsovsPt->GetXaxis()->SetTitle("Heavy Flavour Electron Pt GeV");
  pfeleHFCombinedIsovsPt->GetXaxis()->SetLabelFont(42);
  pfeleHFCombinedIsovsPt->GetXaxis()->SetTitleFont(42);
  pfeleHFCombinedIsovsPt->GetYaxis()->SetTitle("Combined Relative Isolation");
  pfeleHFCombinedIsovsPt->GetYaxis()->SetLabelFont(42);
  pfeleHFCombinedIsovsPt->GetYaxis()->SetTitleFont(42);
  pfeleHFCombinedIsovsPt->DrawNormalized("COLZ ");
  tex = new TLatex(0.05357142,1.039883,"Particle Flow");
  tex->SetTextColor(2);
  tex->SetTextFont(42);
  tex->SetLineWidth(2);
  tex->Draw();
  c1->SaveAs("HF_Electron_Combined_Relative_Isolation_PF.gif");
  c1->cd();
  TH2F *pfelefakeCombinedIsovsPt = (TH2F*)f1->FindObjectAny("pfele_fake_CombinedIsovsPt");
  pfelefakeCombinedIsovsPt->Draw();
  TPaletteAxis *palette = new TPaletteAxis(30.29354,-4.329634e-10,32.05479,1,pfele_fake_CombinedIsovsPt);
  palette->SetLabelColor(1);
  palette->SetLabelFont(42);
  palette->SetLabelOffset(0.005);
  palette->SetLabelSize(0.04);
  palette->SetTitleOffset(1);
  palette->SetTitleSize(0.04);
  palette->SetFillColor(100);
  palette->SetFillStyle(1001);
  pfelefakeCombinedIsovsPt->GetListOfFunctions()->Add(palette,"br");
  pfelefakeCombinedIsovsPt->GetXaxis()->SetTitle("Fake Electron Pt GeV");
  pfelefakeCombinedIsovsPt->GetXaxis()->SetLabelFont(42);
  pfelefakeCombinedIsovsPt->GetXaxis()->SetTitleFont(42);
  pfelefakeCombinedIsovsPt->GetYaxis()->SetTitle("Combined Relative Isolation");
  pfelefakeCombinedIsovsPt->GetYaxis()->SetLabelFont(42);
  pfelefakeCombinedIsovsPt->GetYaxis()->SetTitleFont(42);
  pfelefakeCombinedIsovsPt->DrawNormalized("COLZ ");
  tex = new TLatex(0.05357142,1.039883,"Particle Flow");
  tex->SetTextColor(2);
  tex->SetTextFont(42);
  tex->SetLineWidth(2);
  tex->Draw();
  c1->SaveAs("fake_Electron_Combined_Relative_Isolation_PF.gif");
  c1->cd();
  TH2F *pfelepromptCombinedIsovsPt = (TH2F*)f1->FindObjectAny("pfele_prompt_CombinedIsovsPt");
  pfelepromptCombinedIsovsPt->Draw();
  TPaletteAxis *palette = new TPaletteAxis(30.29354,-4.329634e-10,32.05479,1,pfele_prompt_CombinedIsovsPt);
  palette->SetLabelColor(1);
  palette->SetLabelFont(42);
  palette->SetLabelOffset(0.005);
  palette->SetLabelSize(0.04);
  palette->SetTitleOffset(1);
  palette->SetTitleSize(0.04);
  palette->SetFillColor(100);
  palette->SetFillStyle(1001);
  pfelepromptCombinedIsovsPt->GetListOfFunctions()->Add(palette,"br");
  pfelepromptCombinedIsovsPt->GetXaxis()->SetTitle("Prompt Electron Pt GeV");
  pfelepromptCombinedIsovsPt->GetXaxis()->SetLabelFont(42);
  pfelepromptCombinedIsovsPt->GetXaxis()->SetTitleFont(42);
  pfelepromptCombinedIsovsPt->GetYaxis()->SetTitle("Combined Relative Isolation");
  pfelepromptCombinedIsovsPt->GetYaxis()->SetLabelFont(42);
  pfelepromptCombinedIsovsPt->GetYaxis()->SetTitleFont(42);
  pfelepromptCombinedIsovsPt->DrawNormalized("COLZ ");
  tex = new TLatex(0.05357142,1.039883,"Particle Flow");
  tex->SetTextColor(2);
  tex->SetTextFont(42);
  tex->SetLineWidth(2);
  tex->Draw();
  c1->SaveAs("prompt_Electron_Combined_Relative_Isolation_PF.gif");
  c1->cd();
  TH2F *pfmuHFCombinedIsovsPt = (TH2F*)f1->FindObjectAny("pfmu_HF_CombinedIsovsPt");
  //pfmuHFCombinedIsovsPt->Draw();
  TPaletteAxis *palette = new TPaletteAxis(30.29354,-4.329634e-10,32.05479,1,pfmu_HF_CombinedIsovsPt);
  palette->SetLabelColor(1);
  palette->SetLabelFont(42);
  palette->SetLabelOffset(0.005);
  palette->SetLabelSize(0.04);
  palette->SetTitleOffset(1);
  palette->SetTitleSize(0.04);
  palette->SetFillColor(100);
  palette->SetFillStyle(1001);
  pfmuHFCombinedIsovsPt->GetListOfFunctions()->Add(palette,"br");
  pfmuHFCombinedIsovsPt->GetXaxis()->SetTitle("Heavy Flavour Muon Pt GeV");
  pfmuHFCombinedIsovsPt->GetXaxis()->SetLabelFont(42);
  pfmuHFCombinedIsovsPt->GetXaxis()->SetTitleFont(42);
  pfmuHFCombinedIsovsPt->GetYaxis()->SetTitle("Combined Relative Isolation");
  pfmuHFCombinedIsovsPt->GetYaxis()->SetLabelFont(42);
  pfmuHFCombinedIsovsPt->GetYaxis()->SetTitleFont(42);
  pfmuHFCombinedIsovsPt->DrawNormalized("COLZ ");
  tex = new TLatex(0.05357142,1.039883,"Particle Flow");
  tex->SetTextColor(2);
  tex->SetTextFont(42);
  tex->SetLineWidth(2);
  tex->Draw();
  c1->SaveAs("HF_Muon_Combined_Relative_Isolation_PF.gif");
  c1->cd();
  TH2F *pfmufakeCombinedIsovsPt = (TH2F*)f1->FindObjectAny("pfmu_fake_CombinedIsovsPt");
  //pfmufakeCombinedIsovsPt->Draw();
  TPaletteAxis *palette = new TPaletteAxis(30.29354,-4.329634e-10,32.05479,1,pfmu_fake_CombinedIsovsPt);
  palette->SetLabelColor(1);
  palette->SetLabelFont(42);
  palette->SetLabelOffset(0.005);
  palette->SetLabelSize(0.04);
  palette->SetTitleOffset(1);
  palette->SetTitleSize(0.04);
  palette->SetFillColor(100);
  palette->SetFillStyle(1001);
  pfmufakeCombinedIsovsPt->GetListOfFunctions()->Add(palette,"br");
  pfmufakeCombinedIsovsPt->GetXaxis()->SetTitle("Fake Muon Pt GeV");
  pfmufakeCombinedIsovsPt->GetXaxis()->SetLabelFont(42);
  pfmufakeCombinedIsovsPt->GetXaxis()->SetTitleFont(42);
  pfmufakeCombinedIsovsPt->GetYaxis()->SetTitle("Combined Relative Isolation");
  pfmufakeCombinedIsovsPt->GetYaxis()->SetLabelFont(42);
  pfmufakeCombinedIsovsPt->GetYaxis()->SetTitleFont(42);
  pfmufakeCombinedIsovsPt->DrawNormalized("COLZ ");
  tex = new TLatex(0.05357142,1.039883,"Particle Flow");
  tex->SetTextColor(2);
  tex->SetTextFont(42);
  tex->SetLineWidth(2);
  tex->Draw();
  c1->SaveAs("fake_Muon_Combined_Relative_Isolation_PF.gif");
  c1->cd();
  TH2F *pfmupromptCombinedIsovsPt = (TH2F*)f1->FindObjectAny("pfmu_prompt_CombinedIsovsPt");
  //pfmupromptCombinedIsovsPt->Draw();
  TPaletteAxis *palette = new TPaletteAxis(30.29354,-4.329634e-10,32.05479,1,pfmu_prompt_CombinedIsovsPt);
  palette->SetLabelColor(1);
  palette->SetLabelFont(42);
  palette->SetLabelOffset(0.005);
  palette->SetLabelSize(0.04);
  palette->SetTitleOffset(1);
  palette->SetTitleSize(0.04);
  palette->SetFillColor(100);
  palette->SetFillStyle(1001);
  pfmupromptCombinedIsovsPt->GetListOfFunctions()->Add(palette,"br");
  pfmupromptCombinedIsovsPt->GetXaxis()->SetTitle("Prompt Muon Pt GeV");
  pfmupromptCombinedIsovsPt->GetXaxis()->SetLabelFont(42);
  pfmupromptCombinedIsovsPt->GetXaxis()->SetTitleFont(42);
  pfmupromptCombinedIsovsPt->GetYaxis()->SetTitle("Combined Relative Isolation");
  pfmupromptCombinedIsovsPt->GetYaxis()->SetLabelFont(42);
  pfmupromptCombinedIsovsPt->GetYaxis()->SetTitleFont(42);
  pfmupromptCombinedIsovsPt->DrawNormalized("COLZ ");
  tex = new TLatex(0.05357142,1.039883,"Particle Flow");
  tex->SetTextColor(2);
  tex->SetTextFont(42);
  tex->SetLineWidth(2);
  tex->Draw();
  c1->SaveAs("prompt_Muon_Combined_Relative_Isolation_PF.gif");
  /*
  TH2F *IsocorrPromptEl = (TH2F*)f1->FindObjectAny("elpromptIsolationCorrelation");
  //IsocorrPromptEl->Draw();
  TPaletteAxis *palette = new TPaletteAxis(30.29354,-4.329634e-10,32.05479,1,elpromptIsolationCorrelation);
  palette->SetLabelColor(1);
  palette->SetLabelFont(42);
  palette->SetLabelOffset(0.005);
  palette->SetLabelSize(0.04);
  palette->SetTitleOffset(1);
  palette->SetTitleSize(0.04);
  palette->SetFillColor(100);
  palette->SetFillStyle(1001);
  IsocorrPromptEl->GetListOfFunctions()->Add(palette,"br");
  IsocorrPromptEl->GetXaxis()->SetTitle("Combined Relative Isolation for SR Electrons");
  IsocorrPromptEl->GetXaxis()->SetLabelFont(42);
  IsocorrPromptEl->GetXaxis()->SetTitleFont(42);
  IsocorrPromptEl->GetYaxis()->SetTitle("Combined Relative Isolation for PF Electrons");
  IsocorrPromptEl->GetYaxis()->SetLabelFont(42);
  IsocorrPromptEl->GetYaxis()->SetTitleFont(42);
  IsocorrPromptEl->DrawNormalized("COLZ ");
  c1->SaveAs("Combined_Relative_Isolation_correlation_prompt_el.gif");
  TH2F *IsocorrPromptMu = (TH2F*)f1->FindObjectAny("mupromptIsolationCorrelation");
  //IsocorrPromptMu->Draw();
  TPaletteAxis *palette = new TPaletteAxis(30.29354,-4.329634e-10,32.05479,1,mupromptIsolationCorrelation);
  palette->SetLabelColor(1);
  palette->SetLabelFont(42);
  palette->SetLabelOffset(0.005);
  palette->SetLabelSize(0.04);
  palette->SetTitleOffset(1);
  palette->SetTitleSize(0.04);
  palette->SetFillColor(100);
  palette->SetFillStyle(1001);
  IsocorrPromptMu->GetListOfFunctions()->Add(palette,"br");
  IsocorrPromptMu->GetXaxis()->SetTitle("Combined Relative Isolation for SR Muons");
  IsocorrPromptMu->GetXaxis()->SetLabelFont(42);
  IsocorrPromptMu->GetXaxis()->SetTitleFont(42);
  IsocorrPromptMu->GetYaxis()->SetTitle("Combined Relative Isolation for PF Muons");
  IsocorrPromptMu->GetYaxis()->SetLabelFont(42);
  IsocorrPromptMu->GetYaxis()->SetTitleFont(42);
  IsocorrPromptMu->DrawNormalized("COLZ ");
  c1->SaveAs("Combined_Relative_Isolation_correlation_prompt_mu.gif");
  TH2F *IsocorrFakeEl = (TH2F*)f1->FindObjectAny("elfakeIsolationCorrelation");
  //IsocorrFakeEl->Draw();
  TPaletteAxis *palette = new TPaletteAxis(30.29354,-4.329634e-10,32.05479,1,elfakeIsolationCorrelation);
  palette->SetLabelColor(1);
  palette->SetLabelFont(42);
  palette->SetLabelOffset(0.005);
  palette->SetLabelSize(0.04);
  palette->SetTitleOffset(1);
  palette->SetTitleSize(0.04);
  palette->SetFillColor(100);
  palette->SetFillStyle(1001);
  IsocorrFakeEl->GetListOfFunctions()->Add(palette,"br");
  IsocorrFakeEl->GetXaxis()->SetTitle("Combined Relative Isolation Fake SR Electrons");
  IsocorrFakeEl->GetXaxis()->SetLabelFont(42);
  IsocorrFakeEl->GetXaxis()->SetTitleFont(42);
  IsocorrFakeEl->GetYaxis()->SetTitle("Combined Relative Isolation Fake PF Electrons");
  IsocorrFakeEl->GetYaxis()->SetLabelFont(42);
  IsocorrFakeEl->GetYaxis()->SetTitleFont(42);
  IsocorrFakeEl->DrawNormalized("COLZ ");
  c1->SaveAs("Combined_Relative_Isolation_correlation_fake_el.gif");
  TH2F *IsocorrFakeMu = (TH2F*)f1->FindObjectAny("mufakeIsolationCorrelation");
  //IsocorrFakeMu->Draw();
  TPaletteAxis *palette = new TPaletteAxis(30.29354,-4.329634e-10,32.05479,1,mufakeIsolationCorrelation);
  palette->SetLabelColor(1);
  palette->SetLabelFont(42);
  palette->SetLabelOffset(0.005);
  palette->SetLabelSize(0.04);
  palette->SetTitleOffset(1);
  palette->SetTitleSize(0.04);
  palette->SetFillColor(100);
  palette->SetFillStyle(1001);
  IsocorrFakeMu->GetListOfFunctions()->Add(palette,"br");
  IsocorrFakeMu->GetXaxis()->SetTitle("Combined Relative Isolation Fake SR Muons");
  IsocorrFakeMu->GetXaxis()->SetLabelFont(42);
  IsocorrFakeMu->GetXaxis()->SetTitleFont(42);
  IsocorrFakeMu->GetYaxis()->SetTitle("Combined Relative Isolation Fake PF Muons");
  IsocorrFakeMu->GetYaxis()->SetLabelFont(42);
  IsocorrFakeMu->GetYaxis()->SetTitleFont(42);
  IsocorrFakeMu->DrawNormalized("COLZ ");
  c1->SaveAs("Combined_Relative_Isolation_correlation_fake_mu.gif");

  TH2F *IsocorrHFEL = (TH2F*)f1->FindObjectAny("elHFIsolationCorrelation");
  //IsocorrHFEl->Draw();
  
  TPaletteAxis *palette1 = new TPaletteAxis(30.29354,-4.329634e-10,32.05479,1,elHFIsolationCorrelation);
  palette1->SetLabelColor(1);
  palette1->SetLabelFont(42);
  palette1->SetLabelOffset(0.005);
  palette1->SetLabelSize(0.04);
  palette1->SetTitleOffset(1);
  palette1->SetTitleSize(0.04);
  palette1->SetFillColor(100);
  palette1->SetFillStyle(1001);
  IsocorrHFEL->GetListOfFunctions()->Add(palette1,"br");
  IsocorrHFEL->GetXaxis()->SetTitle("Combined Relative Isolation HF SR Electrons");
  IsocorrHFEL->GetXaxis()->SetLabelFont(42);
  IsocorrHFEL->GetXaxis()->SetTitleFont(42);
  IsocorrHFEL->GetYaxis()->SetTitle("Combined Relative Isolation HF PF Electrons");
  IsocorrHFEL->GetYaxis()->SetLabelFont(42);
  IsocorrHFEL->GetYaxis()->SetTitleFont(42);
  IsocorrHFEL->DrawNormalized("COLZ ");
  c1->SaveAs("Combined_Relative_Isolation_correlation_HF_el.gif");
  TH2F *IsocorrHFMu = (TH2F*)f1->FindObjectAny("muHFIsolationCorrelation");
  //IsocorrHFMu->Draw();
  TPaletteAxis *palette = new TPaletteAxis(30.29354,-4.329634e-10,32.05479,1,muHFIsolationCorrelation);
  palette->SetLabelColor(1);
  palette->SetLabelFont(42);
  palette->SetLabelOffset(0.005);
  palette->SetLabelSize(0.04);
  palette->SetTitleOffset(1);
  palette->SetTitleSize(0.04);
  palette->SetFillColor(100);
  palette->SetFillStyle(1001);
  IsocorrHFMu->GetListOfFunctions()->Add(palette,"br");
  IsocorrHFMu->GetXaxis()->SetTitle("Combined Relative Isolation HF SR Muons");
  IsocorrHFMu->GetXaxis()->SetLabelFont(42);
  IsocorrHFMu->GetXaxis()->SetTitleFont(42);
  IsocorrHFMu->GetYaxis()->SetTitle("Combined Relative Isolation HF PF Muons");
  IsocorrHFMu->GetYaxis()->SetLabelFont(42);
  IsocorrHFMu->GetYaxis()->SetTitleFont(42);
  IsocorrHFMu->DrawNormalized("COLZ ");
  c1->SaveAs("Combined_Relative_Isolation_correlation_HF_mu.gif");
  */
  TCanvas *c1 = new TCanvas("c1", "c1",1301,355,921,538);
  //  gStyle->SetOptStat(2210);
  gStyle->SetOptStat(0);
  gStyle->SetOptFit(2210);
  gStyle->SetFillColor(0);
  gStyle->SetStatBorderSize(0);
  gStyle->SetStatFont(42);
  //  gStyle->SetStatFontSize(40);
  c1->SetRightMargin(0.37);
  gStyle->SetStatX(1);
  gStyle->SetStatY(0.75);
  /*
  TH1F *OptEffElECAL = (TH1F*)f1->FindObjectAny("optEffEl_ecal_");
  OptEffElECAL->Draw();
  OptEffElECAL->GetXaxis()->SetTitle("Standard RECO Electron P_{T}(GeV)");
  OptEffElECAL->GetXaxis()->SetLabelFont(42);
  OptEffElECAL->GetXaxis()->SetTitleFont(42);
  OptEffElECAL->GetYaxis()->SetTitle("Ecal Isolation for Efficient cut (prompt eff > 0.9)");
  OptEffElECAL->GetYaxis()->SetLabelFont(42);
  OptEffElECAL->GetYaxis()->SetTitleFont(42);
  OptEffElECAL->SetMinimum(0);
  OptEffElECAL->SetMaximum(50);
  c1->SaveAs("EfficiencyCutForElectrons_EcalIsolation_SR.gif");

  TH1F *OptEffElHCAL = (TH1F*)f1->FindObjectAny("optEffEl_hcal_");
  OptEffElHCAL->Draw();
  OptEffElHCAL->GetXaxis()->SetTitle("Standard RECO Electron P_{T}(GeV)");
  OptEffElHCAL->GetXaxis()->SetLabelFont(42);
  OptEffElHCAL->GetXaxis()->SetTitleFont(42);
  OptEffElHCAL->GetYaxis()->SetTitle("Hcal Isolation for Efficient cut (prompt eff > 0.9)");
  OptEffElHCAL->GetYaxis()->SetLabelFont(42);
  OptEffElHCAL->GetYaxis()->SetTitleFont(42);
  OptEffElHCAL->SetMinimum(0);
  OptEffElHCAL->SetMaximum(50);
  c1->SaveAs("EfficiencyCutForElectrons_HcalIsolation_SR.gif");

  TH1F *OptEffEltot = (TH1F*)f1->FindObjectAny("optEffEl_tot_");
  OptEffEltot->Draw();
  OptEffEltot->GetXaxis()->SetTitle("Standard RECO Electron P_{T}(GeV)");
  OptEffEltot->GetXaxis()->SetLabelFont(42);
  OptEffEltot->GetXaxis()->SetTitleFont(42);
  OptEffEltot->GetYaxis()->SetTitle("Combined Isolation for Efficient cut (prompt eff > 0.9)");
  OptEffEltot->GetYaxis()->SetLabelFont(42);
  OptEffEltot->GetYaxis()->SetTitleFont(42);
  OptEffEltot->SetMinimum(0);
  OptEffEltot->SetMaximum(50);
  c1->SaveAs("EfficiencyCutForElectrons_CombinedIsolation_SR.gif");

  TH1F *OptEffEltrack = (TH1F*)f1->FindObjectAny("optEffEl_track_");
  OptEffEltrack->Draw();
  OptEffEltrack->GetXaxis()->SetTitle("Standard RECO Electron P_{T}(GeV)");
  OptEffEltrack->GetXaxis()->SetLabelFont(42);
  OptEffEltrack->GetXaxis()->SetTitleFont(42);
  OptEffEltrack->GetYaxis()->SetTitle("Track Isolation for Efficient cut (prompt eff > 0.9)");
  OptEffEltrack->GetYaxis()->SetLabelFont(42);
  OptEffEltrack->GetYaxis()->SetTitleFont(42);
  OptEffEltrack->SetMinimum(0);
  OptEffEltrack->SetMaximum(50);
  c1->SaveAs("EfficiencyCutForElectrons_TrackIsolation_SR.gif");

  TH1F *OptEffpfElChHad = (TH1F*)f1->FindObjectAny("optEffpfEl_ChHad_");
  OptEffpfElChHad->Draw();
  OptEffpfElChHad->GetXaxis()->SetTitle("Particle Flow Electron P_{T}(GeV)");
  OptEffpfElChHad->GetXaxis()->SetLabelFont(42);
  OptEffpfElChHad->GetXaxis()->SetTitleFont(42);
  OptEffpfElChHad->GetYaxis()->SetTitle("Ch. Hadron Isolation for Efficient cut (prompt eff > 0.9)");
  OptEffpfElChHad->GetYaxis()->SetLabelFont(42);
  OptEffpfElChHad->GetYaxis()->SetTitleFont(42);
  OptEffpfElChHad->SetMinimum(0);
  OptEffpfElChHad->SetMaximum(50);
  c1->SaveAs("EfficiencyCutForElectrons_ChargedHadronIsolation_PF.gif");

  TH1F *OptEffpfElNeHad = (TH1F*)f1->FindObjectAny("optEffpfEl_NeHad_");
  OptEffpfElNeHad->Draw();
  OptEffpfElNeHad->GetXaxis()->SetTitle("Particle Flow Electron P_{T}(GeV)");
  OptEffpfElNeHad->GetXaxis()->SetLabelFont(42);
  OptEffpfElNeHad->GetXaxis()->SetTitleFont(42);
  OptEffpfElNeHad->GetYaxis()->SetTitle("N. Hadron Isolation for Efficient cut (prompt eff > 0.9)");
  OptEffpfElNeHad->GetYaxis()->SetLabelFont(42);
  OptEffpfElNeHad->GetYaxis()->SetTitleFont(42);
  OptEffpfElNeHad->SetMinimum(0);
  OptEffpfElNeHad->SetMaximum(50);
  c1->SaveAs("EfficiencyCutForElectrons_NeutralHadronIsolation_PF.gif");
  */
  TH1F *OptEffpfEltot = (TH1F*)f1->FindObjectAny("optEffpfEl_tot_");
  OptEffpfEltot->Draw();
  OptEffpfEltot->GetXaxis()->SetTitle("Particle Flow Electron P_{T}(GeV)");
  OptEffpfEltot->GetXaxis()->SetLabelFont(42);
  OptEffpfEltot->GetXaxis()->SetTitleFont(42);
  OptEffpfEltot->GetYaxis()->SetTitle("Combined Isolation for Efficient cut (prompt eff > 0.9)");
  OptEffpfEltot->GetYaxis()->SetLabelFont(42);
  OptEffpfEltot->GetYaxis()->SetTitleFont(42);
  OptEffpfEltot->SetMinimum(0);
  OptEffpfEltot->SetMaximum(50);
  c1->SaveAs("EfficiencyCutForElectrons_CombinedIsolation_PF.gif");

  TH1F *OptEffpfElGam = (TH1F*)f1->FindObjectAny("optEffpfEl_Gam_");
  OptEffpfElGam->Draw();
  OptEffpfElGam->GetXaxis()->SetTitle("Particle Flow Electron P_{T}(GeV)");
  OptEffpfElGam->GetXaxis()->SetLabelFont(42);
  OptEffpfElGam->GetXaxis()->SetTitleFont(42);
  OptEffpfElGam->GetYaxis()->SetTitle("Gamma Isolation for Efficient cut (prompt eff > 0.9)");
  OptEffpfElGam->GetYaxis()->SetLabelFont(42);
  OptEffpfElGam->GetYaxis()->SetTitleFont(42);
  OptEffpfElGam->SetMinimum(0);
  OptEffpfElGam->SetMaximum(50);
  c1->SaveAs("EfficiencyCutForElectrons_GammaIsolation_PF.gif");
  /*
  TH1F *OptEffMuECAL = (TH1F*)f1->FindObjectAny("optEffMu_ecal_");
  OptEffMuECAL->Draw();
  OptEffMuECAL->GetXaxis()->SetTitle("Standard RECO Muon P_{T}(GeV)");
  OptEffMuECAL->GetXaxis()->SetLabelFont(42);
  OptEffMuECAL->GetXaxis()->SetTitleFont(42);
  OptEffMuECAL->GetYaxis()->SetTitle("Ecal Isolation for Efficient cut (prompt eff > 0.9)");
  OptEffMuECAL->GetYaxis()->SetLabelFont(42);
  OptEffMuECAL->GetYaxis()->SetTitleFont(42);
  OptEffMuECAL->SetMinimum(0);
  OptEffMuECAL->SetMaximum(50);
  c1->SaveAs("EfficiencyCutForMuons_EcalIsolation_SR.gif");

  TH1F *OptEffMuHCAL = (TH1F*)f1->FindObjectAny("optEffMu_hcal_");
  OptEffMuHCAL->Draw();
  OptEffMuHCAL->GetXaxis()->SetTitle("Standard RECO Muon P_{T}(GeV)");
  OptEffMuHCAL->GetXaxis()->SetLabelFont(42);
  OptEffMuHCAL->GetXaxis()->SetTitleFont(42);
  OptEffMuHCAL->GetYaxis()->SetTitle("Hcal Isolation for Efficient cut (prompt eff > 0.9)");
  OptEffMuHCAL->GetYaxis()->SetLabelFont(42);
  OptEffMuHCAL->GetYaxis()->SetTitleFont(42);
  OptEffMuHCAL->SetMinimum(0);
  OptEffMuHCAL->SetMaximum(50);
  c1->SaveAs("EfficiencyCutForMuons_HcalIsolation_SR.gif");

  TH1F *OptEffMutot = (TH1F*)f1->FindObjectAny("optEffMu_tot_");
  OptEffMutot->Draw();
  OptEffMutot->GetXaxis()->SetTitle("Standard RECO Muon P_{T}(GeV)");
  OptEffMutot->GetXaxis()->SetLabelFont(42);
  OptEffMutot->GetXaxis()->SetTitleFont(42);
  OptEffMutot->GetYaxis()->SetTitle("Combined Isolation for Efficient cut (prompt eff > 0.9)");
  OptEffMutot->GetYaxis()->SetLabelFont(42);
  OptEffMutot->GetYaxis()->SetTitleFont(42);
  OptEffMutot->SetMinimum(0);
  OptEffMutot->SetMaximum(50);
  c1->SaveAs("EfficiencyCutForMuons_CombinedIsolation_SR.gif");

  TH1F *OptEffMutrack = (TH1F*)f1->FindObjectAny("optEffMu_track_");
  OptEffMutrack->Draw();
  OptEffMutrack->GetXaxis()->SetTitle("Standard RECO Muon P_{T}(GeV)");
  OptEffMutrack->GetXaxis()->SetLabelFont(42);
  OptEffMutrack->GetXaxis()->SetTitleFont(42);
  OptEffMutrack->GetYaxis()->SetTitle("Track Isolation for Efficient cut (prompt eff > 0.9)");
  OptEffMutrack->GetYaxis()->SetLabelFont(42);
  OptEffMutrack->GetYaxis()->SetTitleFont(42);
  OptEffMutrack->SetMinimum(0);
  OptEffMutrack->SetMaximum(50);
  c1->SaveAs("EfficiencyCutForMuons_TrackIsolation_SR.gif");
  */
  TH1F *OptEffpfMuChHad = (TH1F*)f1->FindObjectAny("optEffpfMu_ChHad_");
  OptEffpfMuChHad->Draw();
  OptEffpfMuChHad->GetXaxis()->SetTitle("Particle Flow Muon P_{T}(GeV)");
  OptEffpfMuChHad->GetXaxis()->SetLabelFont(42);
  OptEffpfMuChHad->GetXaxis()->SetTitleFont(42);
  OptEffpfMuChHad->GetYaxis()->SetTitle("Ch. Hadron Isolation for Efficient cut (prompt eff > 0.9)");
  OptEffpfMuChHad->GetYaxis()->SetLabelFont(42);
  OptEffpfMuChHad->GetYaxis()->SetTitleFont(42);
  OptEffpfMuChHad->SetMinimum(0);
  OptEffpfMuChHad->SetMaximum(50);
  c1->SaveAs("EfficiencyCutForMuons_ChargedHadronIsolation_PF.gif");

  TH1F *OptEffpfMuNeHad = (TH1F*)f1->FindObjectAny("optEffpfMu_NeHad_");
  OptEffpfMuNeHad->Draw();
  OptEffpfMuNeHad->GetXaxis()->SetTitle("Particle Flow Muon P_{T}(GeV)");
  OptEffpfMuNeHad->GetXaxis()->SetLabelFont(42);
  OptEffpfMuNeHad->GetXaxis()->SetTitleFont(42);
  OptEffpfMuNeHad->GetYaxis()->SetTitle("N. Hadron Isolation for Efficient cut (prompt eff > 0.9)");
  OptEffpfMuNeHad->GetYaxis()->SetLabelFont(42);
  OptEffpfMuNeHad->GetYaxis()->SetTitleFont(42);
  OptEffpfMuNeHad->SetMinimum(0);
  OptEffpfMuNeHad->SetMaximum(50);
  c1->SaveAs("EfficiencyCutForMuons_NeutralHadronIsolation_PF.gif");

  TH1F *OptEffpfMutot = (TH1F*)f1->FindObjectAny("optEffpfMu_tot_");
  OptEffpfMutot->Draw();
  OptEffpfMutot->GetXaxis()->SetTitle("Particle Flow Muon P_{T}(GeV)");
  OptEffpfMutot->GetXaxis()->SetLabelFont(42);
  OptEffpfMutot->GetXaxis()->SetTitleFont(42);
  OptEffpfMutot->GetYaxis()->SetTitle("Combined Isolation for Efficient cut (prompt eff > 0.9)");
  OptEffpfMutot->GetYaxis()->SetLabelFont(42);
  OptEffpfMutot->GetYaxis()->SetTitleFont(42);
  OptEffpfMutot->SetMinimum(0);
  OptEffpfMutot->SetMaximum(50);
  c1->SaveAs("EfficiencyCutForMuons_CombinedIsolation_PF.gif");

  TH1F *OptEffpfMuGam = (TH1F*)f1->FindObjectAny("optEffpfMu_Gam_");
  OptEffpfMuGam->Draw();
  OptEffpfMuGam->GetXaxis()->SetTitle("Particle Flow Muon P_{T}(GeV)");
  OptEffpfMuGam->GetXaxis()->SetLabelFont(42);
  OptEffpfMuGam->GetXaxis()->SetTitleFont(42);
  OptEffpfMuGam->GetYaxis()->SetTitle("Gamma Isolation for Efficient cut (prompt eff > 0.9)");
  OptEffpfMuGam->GetYaxis()->SetLabelFont(42);
  OptEffpfMuGam->GetYaxis()->SetTitleFont(42);
  OptEffpfMuGam->SetMinimum(0);
  OptEffpfMuGam->SetMaximum(50);
  c1->SaveAs("EfficiencyCutForMuons_GammaIsolation_PF.gif");
  /*
  TH1F *OptOptimalElECAL = (TH1F*)f1->FindObjectAny("optOptimalEl_ecal_");
  OptOptimalElECAL->Draw();
  OptOptimalElECAL->GetXaxis()->SetTitle("Standard RECO Electron P_{T}(GeV)");
  OptOptimalElECAL->GetXaxis()->SetLabelFont(42);
  OptOptimalElECAL->GetXaxis()->SetTitleFont(42);
  OptOptimalElECAL->GetYaxis()->SetTitle("Ecal Isolation for Optimal cut");
  OptOptimalElECAL->GetYaxis()->SetLabelFont(42);
  OptOptimalElECAL->GetYaxis()->SetTitleFont(42);
  OptOptimalElECAL->SetMinimum(0);
  OptOptimalElECAL->SetMaximum(50);
  c1->SaveAs("OptimalCutForElectrons_EcalIsolation_SR.gif");

  TH1F *OptOptimalElHCAL = (TH1F*)f1->FindObjectAny("optOptimalEl_hcal_");
  OptOptimalElHCAL->Draw();
  OptOptimalElHCAL->GetXaxis()->SetTitle("Standard RECO Electron P_{T}(GeV)");
  OptOptimalElHCAL->GetXaxis()->SetLabelFont(42);
  OptOptimalElHCAL->GetXaxis()->SetTitleFont(42);
  OptOptimalElHCAL->GetYaxis()->SetTitle("Hcal Isolation for Optimal cut");
  OptOptimalElHCAL->GetYaxis()->SetLabelFont(42);
  OptOptimalElHCAL->GetYaxis()->SetTitleFont(42);
  OptOptimalElHCAL->SetMinimum(0);
  OptOptimalElHCAL->SetMaximum(50);
  c1->SaveAs("OptimalCutForElectrons_HcalIsolation_SR.gif");

  TH1F *OptOptimalEltot = (TH1F*)f1->FindObjectAny("optOptimalEl_tot_");
  OptOptimalEltot->Draw();
  OptOptimalEltot->GetXaxis()->SetTitle("Standard RECO Electron P_{T}(GeV)");
  OptOptimalEltot->GetXaxis()->SetLabelFont(42);
  OptOptimalEltot->GetXaxis()->SetTitleFont(42);
  OptOptimalEltot->GetYaxis()->SetTitle("Combined Isolation for Optimal cut");
  OptOptimalEltot->GetYaxis()->SetLabelFont(42);
  OptOptimalEltot->GetYaxis()->SetTitleFont(42);
  OptOptimalEltot->SetMinimum(0);
  OptOptimalEltot->SetMaximum(50);
  c1->SaveAs("OptimalCutForElectrons_CombinedIsolation_SR.gif");

  TH1F *OptOptimalEltrack = (TH1F*)f1->FindObjectAny("optOptimalEl_track_");
  OptOptimalEltrack->Draw();
  OptOptimalEltrack->GetXaxis()->SetTitle("Standard RECO Electron P_{T}(GeV)");
  OptOptimalEltrack->GetXaxis()->SetLabelFont(42);
  OptOptimalEltrack->GetXaxis()->SetTitleFont(42);
  OptOptimalEltrack->GetYaxis()->SetTitle("Track Isolation for Optimal cut");
  OptOptimalEltrack->GetYaxis()->SetLabelFont(42);
  OptOptimalEltrack->GetYaxis()->SetTitleFont(42);
  OptOptimalEltrack->SetMinimum(0);
  OptOptimalEltrack->SetMaximum(50);
  c1->SaveAs("OptimalCutForElectrons_TrackIsolation_SR.gif");
  */
  TH1F *OptOptimalpfElChHad = (TH1F*)f1->FindObjectAny("optOptimalpfEl_ChHad_");
  OptOptimalpfElChHad->Draw();
  OptOptimalpfElChHad->GetXaxis()->SetTitle("Particle Flow Electron P_{T}(GeV)");
  OptOptimalpfElChHad->GetXaxis()->SetLabelFont(42);
  OptOptimalpfElChHad->GetXaxis()->SetTitleFont(42);
  OptOptimalpfElChHad->GetYaxis()->SetTitle("Ch. Hadron Isolation for Optimal cut");
  OptOptimalpfElChHad->GetYaxis()->SetLabelFont(42);
  OptOptimalpfElChHad->GetYaxis()->SetTitleFont(42);
  OptOptimalpfElChHad->SetMinimum(0);
  OptOptimalpfElChHad->SetMaximum(50);
  c1->SaveAs("OptimalCutForElectrons_ChargedHadronIsolation_PF.gif");

  TH1F *OptOptimalpfElNeHad = (TH1F*)f1->FindObjectAny("optOptimalpfEl_NeHad_");
  OptOptimalpfElNeHad->Draw();
  OptOptimalpfElNeHad->GetXaxis()->SetTitle("Particle Flow Electron P_{T}(GeV)");
  OptOptimalpfElNeHad->GetXaxis()->SetLabelFont(42);
  OptOptimalpfElNeHad->GetXaxis()->SetTitleFont(42);
  OptOptimalpfElNeHad->GetYaxis()->SetTitle("N. Hadron Isolation for Optimal cut");
  OptOptimalpfElNeHad->GetYaxis()->SetLabelFont(42);
  OptOptimalpfElNeHad->GetYaxis()->SetTitleFont(42);
  OptOptimalpfElNeHad->SetMinimum(0);
  OptOptimalpfElNeHad->SetMaximum(50);
  c1->SaveAs("OptimalCutForElectrons_NeutralHadronIsolation_PF.gif");

  TH1F *OptOptimalpfEltot = (TH1F*)f1->FindObjectAny("optOptimalpfEl_tot_");
  OptOptimalpfEltot->Draw();
  OptOptimalpfEltot->GetXaxis()->SetTitle("Particle Flow Electron P_{T}(GeV)");
  OptOptimalpfEltot->GetXaxis()->SetLabelFont(42);
  OptOptimalpfEltot->GetXaxis()->SetTitleFont(42);
  OptOptimalpfEltot->GetYaxis()->SetTitle("Combined Isolation for Optimal cut");
  OptOptimalpfEltot->GetYaxis()->SetLabelFont(42);
  OptOptimalpfEltot->GetYaxis()->SetTitleFont(42);
  OptOptimalpfEltot->SetMinimum(0);
  OptOptimalpfEltot->SetMaximum(50);
  c1->SaveAs("OptimalCutForElectrons_CombinedIsolation_PF.gif");

  TH1F *OptOptimalpfElGam = (TH1F*)f1->FindObjectAny("optOptimalpfEl_Gam_");
  OptOptimalpfElGam->Draw();
  OptOptimalpfElGam->GetXaxis()->SetTitle("Particle Flow Electron P_{T}(GeV)");
  OptOptimalpfElGam->GetXaxis()->SetLabelFont(42);
  OptOptimalpfElGam->GetXaxis()->SetTitleFont(42);
  OptOptimalpfElGam->GetYaxis()->SetTitle("Gamma Isolation for Optimal cut");
  OptOptimalpfElGam->GetYaxis()->SetLabelFont(42);
  OptOptimalpfElGam->GetYaxis()->SetTitleFont(42);
  OptOptimalpfElGam->SetMinimum(0);
  OptOptimalpfElGam->SetMaximum(50);
  c1->SaveAs("OptimalCutForElectrons_GammaIsolation_PF.gif");
  /*
  TH1F *OptOptimalMuECAL = (TH1F*)f1->FindObjectAny("optOptimalMu_ecal_");
  OptOptimalMuECAL->Draw();
  OptOptimalMuECAL->GetXaxis()->SetTitle("Standard RECO Muon P_{T}(GeV)");
  OptOptimalMuECAL->GetXaxis()->SetLabelFont(42);
  OptOptimalMuECAL->GetXaxis()->SetTitleFont(42);
  OptOptimalMuECAL->GetYaxis()->SetTitle("Ecal Isolation for Optimal cut");
  OptOptimalMuECAL->GetYaxis()->SetLabelFont(42);
  OptOptimalMuECAL->GetYaxis()->SetTitleFont(42);
  OptOptimalMuECAL->SetMinimum(0);
  OptOptimalMuECAL->SetMaximum(50);
  c1->SaveAs("OptimalCutForMuons_EcalIsolation_SR.gif");

  TH1F *OptOptimalMuHCAL = (TH1F*)f1->FindObjectAny("optEffMu_hcal_");
  OptOptimalMuHCAL->Draw();
  OptOptimalMuHCAL->GetXaxis()->SetTitle("Standard RECO Muon P_{T}(GeV)");
  OptOptimalMuHCAL->GetXaxis()->SetLabelFont(42);
  OptOptimalMuHCAL->GetXaxis()->SetTitleFont(42);
  OptOptimalMuHCAL->GetYaxis()->SetTitle("Hcal Isolation for Optimal cut");
  OptOptimalMuHCAL->GetYaxis()->SetLabelFont(42);
  OptOptimalMuHCAL->GetYaxis()->SetTitleFont(42);
  OptOptimalMuHCAL->SetMinimum(0);
  OptOptimalMuHCAL->SetMaximum(50);
  c1->SaveAs("OptimalCutForMuons_HcalIsolation_SR.gif");

  TH1F *OptOptimalMutot = (TH1F*)f1->FindObjectAny("optOptimalMu_tot_");
  OptOptimalMutot->Draw();
  OptOptimalMutot->GetXaxis()->SetTitle("Standard RECO Muon P_{T}(GeV)");
  OptOptimalMutot->GetXaxis()->SetLabelFont(42);
  OptOptimalMutot->GetXaxis()->SetTitleFont(42);
  OptOptimalMutot->GetYaxis()->SetTitle("Combined Isolation for Optimal cut");
  OptOptimalMutot->GetYaxis()->SetLabelFont(42);
  OptOptimalMutot->GetYaxis()->SetTitleFont(42);
  OptOptimalMutot->SetMinimum(0);
  OptOptimalMutot->SetMaximum(50);
  c1->SaveAs("OptimalCutForMuons_CombinedIsolation_SR.gif");

  TH1F *OptOptimalMutrack = (TH1F*)f1->FindObjectAny("optOptimalMu_track_");
  OptOptimalMutrack->Draw();
  OptOptimalMutrack->GetXaxis()->SetTitle("Standard RECO Muon P_{T}(GeV)");
  OptOptimalMutrack->GetXaxis()->SetLabelFont(42);
  OptOptimalMutrack->GetXaxis()->SetTitleFont(42);
  OptOptimalMutrack->GetYaxis()->SetTitle("Track Isolation for Optimal cut");
  OptOptimalMutrack->GetYaxis()->SetLabelFont(42);
  OptOptimalMutrack->GetYaxis()->SetTitleFont(42);
  OptOptimalMutrack->SetMinimum(0);
  OptOptimalMutrack->SetMaximum(50);
  c1->SaveAs("OptimalCutForMuons_TrackIsolation_SR.gif");
  */
  TH1F *OptOptimalpfMuChHad = (TH1F*)f1->FindObjectAny("optoptimalpfmu_ChHad_");
  OptOptimalpfMuChHad->Draw();
  OptOptimalpfMuChHad->GetXaxis()->SetTitle("Particle Flow Muon P_{T}(GeV)");
  OptOptimalpfMuChHad->GetXaxis()->SetLabelFont(42);
  OptOptimalpfMuChHad->GetXaxis()->SetTitleFont(42);
  OptOptimalpfMuChHad->GetYaxis()->SetTitle("Ch. Hadron Isolation for Optimal cut");
  OptOptimalpfMuChHad->GetYaxis()->SetLabelFont(42);
  OptOptimalpfMuChHad->GetYaxis()->SetTitleFont(42);
  OptOptimalpfMuChHad->SetMinimum(0);
  OptOptimalpfMuChHad->SetMaximum(50);
  c1->SaveAs("OptimalCutForMuons_ChargedHadronIsolation_PF.gif");

  TH1F *OptOptimalpfMuNeHad = (TH1F*)f1->FindObjectAny("optoptimalpfmu_NeHad_");
  OptOptimalpfMuNeHad->Draw();
  OptOptimalpfMuNeHad->GetXaxis()->SetTitle("Particle Flow Muon P_{T}(GeV)");
  OptOptimalpfMuNeHad->GetXaxis()->SetLabelFont(42);
  OptOptimalpfMuNeHad->GetXaxis()->SetTitleFont(42);
  OptOptimalpfMuNeHad->GetYaxis()->SetTitle("N. Hadron Isolation for Optimal cut");
  OptOptimalpfMuNeHad->GetYaxis()->SetLabelFont(42);
  OptOptimalpfMuNeHad->GetYaxis()->SetTitleFont(42);
  OptOptimalpfMuNeHad->SetMinimum(0);
  OptOptimalpfMuNeHad->SetMaximum(50);
  c1->SaveAs("OptimalCutForMuons_NeutralHadronIsolation_PF.gif");

  TH1F *OptOptimalpfMutot = (TH1F*)f1->FindObjectAny("optoptimalpfmu_tot_");
  OptOptimalpfMutot->Draw();
  OptOptimalpfMutot->GetXaxis()->SetTitle("Particle Flow Muon P_{T}(GeV)");
  OptOptimalpfMutot->GetXaxis()->SetLabelFont(42);
  OptOptimalpfMutot->GetXaxis()->SetTitleFont(42);
  OptOptimalpfMutot->GetYaxis()->SetTitle("Combined Isolation for Optimal cut");
  OptOptimalpfMutot->GetYaxis()->SetLabelFont(42);
  OptOptimalpfMutot->GetYaxis()->SetTitleFont(42);
  OptOptimalpfMutot->SetMinimum(0);
  OptOptimalpfMutot->SetMaximum(50);
  c1->SaveAs("OptimalCutForMuons_CombinedIsolation_PF.gif");

  TH1F *OptOptimalpfMuGam = (TH1F*)f1->FindObjectAny("optoptimalpfmu_Gam_");
  OptOptimalpfMuGam->Draw();
  OptOptimalpfMuGam->GetXaxis()->SetTitle("Particle Flow Muon P_{T}(GeV)");
  OptOptimalpfMuGam->GetXaxis()->SetLabelFont(42);
  OptOptimalpfMuGam->GetXaxis()->SetTitleFont(42);
  OptOptimalpfMuGam->GetYaxis()->SetTitle("Gamma Isolation for Optimal cut");
  OptOptimalpfMuGam->GetYaxis()->SetLabelFont(42);
  OptOptimalpfMuGam->GetYaxis()->SetTitleFont(42);
  OptOptimalpfMuGam->SetMinimum(0);
  OptOptimalpfMuGam->SetMaximum(50);
  c1->SaveAs("OptimalCutForMuons_GammaIsolation_PF.gif");
  /*
  ///////////////////////

  TH1F *OptPureFakeElECAL = (TH1F*)f1->FindObjectAny("optPureFakeEl_ecal_");
  OptPureFakeElECAL->Draw();
  OptPureFakeElECAL->GetXaxis()->SetTitle("Standard RECO Electron P_{T}(GeV)");
  OptPureFakeElECAL->GetXaxis()->SetLabelFont(42);
  OptPureFakeElECAL->GetXaxis()->SetTitleFont(42);
  OptPureFakeElECAL->GetYaxis()->SetTitle("Ecal Isolation for PureFake cut (rej Fake > 0.9)");
  OptPureFakeElECAL->GetYaxis()->SetLabelFont(42);
  OptPureFakeElECAL->GetYaxis()->SetTitleFont(42);
  OptPureFakeElECAL->SetMinimum(0);
  OptPureFakeElECAL->SetMaximum(50);
  c1->SaveAs("PureFakeCutForElectrons_EcalIsolation_SR.gif");

  TH1F *OptPureFakeElHCAL = (TH1F*)f1->FindObjectAny("optPureFakeEl_hcal_");
  OptPureFakeElHCAL->Draw();
  OptPureFakeElHCAL->GetXaxis()->SetTitle("Standard RECO Electron P_{T}(GeV)");
  OptPureFakeElHCAL->GetXaxis()->SetLabelFont(42);
  OptPureFakeElHCAL->GetXaxis()->SetTitleFont(42);
  OptPureFakeElHCAL->GetYaxis()->SetTitle("Hcal Isolation for PureFake cut (rej Fake > 0.9)");
  OptPureFakeElHCAL->GetYaxis()->SetLabelFont(42);
  OptPureFakeElHCAL->GetYaxis()->SetTitleFont(42);
  OptPureFakeElHCAL->SetMinimum(0);
  OptPureFakeElHCAL->SetMaximum(50);
  c1->SaveAs("PureFakeCutForElectrons_HcalIsolation_SR.gif");

  TH1F *OptPureFakeEltot = (TH1F*)f1->FindObjectAny("optPureFakeEl_tot_");
  OptPureFakeEltot->Draw();
  OptPureFakeEltot->GetXaxis()->SetTitle("Standard RECO Electron P_{T}(GeV)");
  OptPureFakeEltot->GetXaxis()->SetLabelFont(42);
  OptPureFakeEltot->GetXaxis()->SetTitleFont(42);
  OptPureFakeEltot->GetYaxis()->SetTitle("Combined Isolation for PureFake cut (rej Fake > 0.9)");
  OptPureFakeEltot->GetYaxis()->SetLabelFont(42);
  OptPureFakeEltot->GetYaxis()->SetTitleFont(42);
  OptPureFakeEltot->SetMinimum(0);
  OptPureFakeEltot->SetMaximum(50);
  c1->SaveAs("PureFakeCutForElectrons_CombinedIsolation_SR.gif");

  TH1F *OptPureFakeEltrack = (TH1F*)f1->FindObjectAny("optPureFakeEl_track_");
  OptPureFakeEltrack->Draw();
  OptPureFakeEltrack->GetXaxis()->SetTitle("Standard RECO Electron P_{T}(GeV)");
  OptPureFakeEltrack->GetXaxis()->SetLabelFont(42);
  OptPureFakeEltrack->GetXaxis()->SetTitleFont(42);
  OptPureFakeEltrack->GetYaxis()->SetTitle("Track Isolation for PureFake cut (rej Fake > 0.9)");
  OptPureFakeEltrack->GetYaxis()->SetLabelFont(42);
  OptPureFakeEltrack->GetYaxis()->SetTitleFont(42);
  OptPureFakeEltrack->SetMinimum(0);
  OptPureFakeEltrack->SetMaximum(50);
  c1->SaveAs("PureFakeCutForElectrons_TrackIsolation_SR.gif");
  */
  TH1F *OptPureFakepfElChHad = (TH1F*)f1->FindObjectAny("optPureFakepfEl_ChHad_");
  OptPureFakepfElChHad->Draw();
  OptPureFakepfElChHad->GetXaxis()->SetTitle("Particle Flow Electron P_{T}(GeV)");
  OptPureFakepfElChHad->GetXaxis()->SetLabelFont(42);
  OptPureFakepfElChHad->GetXaxis()->SetTitleFont(42);
  OptPureFakepfElChHad->GetYaxis()->SetTitle("Ch. Hadron Isolation for PureFake cut (rej Fake > 0.9)");
  OptPureFakepfElChHad->GetYaxis()->SetLabelFont(42);
  OptPureFakepfElChHad->GetYaxis()->SetTitleFont(42);
  OptPureFakepfElChHad->SetMinimum(0);
  OptPureFakepfElChHad->SetMaximum(50);
  c1->SaveAs("PureFakeCutForElectrons_ChargedHadronIsolation_PF.gif");

  TH1F *OptPureFakepfElNeHad = (TH1F*)f1->FindObjectAny("optPureFakepfEl_NeHad_");
  OptPureFakepfElNeHad->Draw();
  OptPureFakepfElNeHad->GetXaxis()->SetTitle("Particle Flow Electron P_{T}(GeV)");
  OptPureFakepfElNeHad->GetXaxis()->SetLabelFont(42);
  OptPureFakepfElNeHad->GetXaxis()->SetTitleFont(42);
  OptPureFakepfElNeHad->GetYaxis()->SetTitle("N. Hadron Isolation for PureFake cut (rej Fake > 0.9)");
  OptPureFakepfElNeHad->GetYaxis()->SetLabelFont(42);
  OptPureFakepfElNeHad->GetYaxis()->SetTitleFont(42);
  OptPureFakepfElNeHad->SetMinimum(0);
  OptPureFakepfElNeHad->SetMaximum(50);
  c1->SaveAs("PureFakeCutForElectrons_NeutralHadronIsolation_PF.gif");

  TH1F *OptPureFakepfEltot = (TH1F*)f1->FindObjectAny("optPureFakepfEl_tot_");
  OptPureFakepfEltot->Draw();
  OptPureFakepfEltot->GetXaxis()->SetTitle("Particle Flow Electron P_{T}(GeV)");
  OptPureFakepfEltot->GetXaxis()->SetLabelFont(42);
  OptPureFakepfEltot->GetXaxis()->SetTitleFont(42);
  OptPureFakepfEltot->GetYaxis()->SetTitle("Combined Isolation for PureFake cut (rej Fake > 0.9)");
  OptPureFakepfEltot->GetYaxis()->SetLabelFont(42);
  OptPureFakepfEltot->GetYaxis()->SetTitleFont(42);
  OptPureFakepfEltot->SetMinimum(0);
  OptPureFakepfEltot->SetMaximum(50);
  c1->SaveAs("PureFakeCutForElectrons_CombinedIsolation_PF.gif");

  TH1F *OptPureFakepfElGam = (TH1F*)f1->FindObjectAny("optPureFakepfEl_Gam_");
  OptPureFakepfElGam->Draw();
  OptPureFakepfElGam->GetXaxis()->SetTitle("Particle Flow Electron P_{T}(GeV)");
  OptPureFakepfElGam->GetXaxis()->SetLabelFont(42);
  OptPureFakepfElGam->GetXaxis()->SetTitleFont(42);
  OptPureFakepfElGam->GetYaxis()->SetTitle("Gamma Isolation for PureFake cut (rej Fake > 0.9)");
  OptPureFakepfElGam->GetYaxis()->SetLabelFont(42);
  OptPureFakepfElGam->GetYaxis()->SetTitleFont(42);
  OptPureFakepfElGam->SetMinimum(0);
  OptPureFakepfElGam->SetMaximum(50);
  c1->SaveAs("PureFakeCutForElectrons_GammaIsolation_PF.gif");
  /*
  TH1F *OptPureFakeMuECAL = (TH1F*)f1->FindObjectAny("optPureFakeMu_ecal_");
  OptPureFakeMuECAL->Draw();
  OptPureFakeMuECAL->GetXaxis()->SetTitle("Standard RECO Muon P_{T}(GeV)");
  OptPureFakeMuECAL->GetXaxis()->SetLabelFont(42);
  OptPureFakeMuECAL->GetXaxis()->SetTitleFont(42);
  OptPureFakeMuECAL->GetYaxis()->SetTitle("Ecal Isolation for PureFake cut (rej Fake > 0.9)");
  OptPureFakeMuECAL->GetYaxis()->SetLabelFont(42);
  OptPureFakeMuECAL->GetYaxis()->SetTitleFont(42);
  OptPureFakeMuECAL->SetMinimum(0);
  OptPureFakeMuECAL->SetMaximum(50);
  c1->SaveAs("PureFakeCutForMuons_EcalIsolation_SR.gif");

  TH1F *OptPureFakeMuHCAL = (TH1F*)f1->FindObjectAny("optEffMu_hcal_");
  OptPureFakeMuHCAL->Draw();
  OptPureFakeMuHCAL->GetXaxis()->SetTitle("Standard RECO Muon P_{T}(GeV)");
  OptPureFakeMuHCAL->GetXaxis()->SetLabelFont(42);
  OptPureFakeMuHCAL->GetXaxis()->SetTitleFont(42);
  OptPureFakeMuHCAL->GetYaxis()->SetTitle("Hcal Isolation for PureFake cut (rej Fake > 0.9)");
  OptPureFakeMuHCAL->GetYaxis()->SetLabelFont(42);
  OptPureFakeMuHCAL->GetYaxis()->SetTitleFont(42);
  OptPureFakeMuHCAL->SetMinimum(0);
  OptPureFakeMuHCAL->SetMaximum(50);
  c1->SaveAs("PureFakeCutForMuons_HcalIsolation_SR.gif");

  TH1F *OptPureFakeMutot = (TH1F*)f1->FindObjectAny("optPureFakeMu_tot_");
  OptPureFakeMutot->Draw();
  OptPureFakeMutot->GetXaxis()->SetTitle("Standard RECO Muon P_{T}(GeV)");
  OptPureFakeMutot->GetXaxis()->SetLabelFont(42);
  OptPureFakeMutot->GetXaxis()->SetTitleFont(42);
  OptPureFakeMutot->GetYaxis()->SetTitle("Combined Isolation for PureFake cut (rej Fake > 0.9)");
  OptPureFakeMutot->GetYaxis()->SetLabelFont(42);
  OptPureFakeMutot->GetYaxis()->SetTitleFont(42);
  OptPureFakeMutot->SetMinimum(0);
  OptPureFakeMutot->SetMaximum(50);
  c1->SaveAs("PureFakeCutForMuons_CombinedIsolation_SR.gif");

  TH1F *OptPureFakeMutrack = (TH1F*)f1->FindObjectAny("optPureFakeMu_track_");
  OptPureFakeMutrack->Draw();
  OptPureFakeMutrack->GetXaxis()->SetTitle("Standard RECO Muon P_{T}(GeV)");
  OptPureFakeMutrack->GetXaxis()->SetLabelFont(42);
  OptPureFakeMutrack->GetXaxis()->SetTitleFont(42);
  OptPureFakeMutrack->GetYaxis()->SetTitle("Track Isolation for PureFake cut (rej Fake > 0.9)");
  OptPureFakeMutrack->GetYaxis()->SetLabelFont(42);
  OptPureFakeMutrack->GetYaxis()->SetTitleFont(42);
  OptPureFakeMutrack->SetMinimum(0);
  OptPureFakeMutrack->SetMaximum(50);
  c1->SaveAs("PureFakeCutForMuons_TrackIsolation_SR.gif");
  */
  TH1F *OptPureFakepfMuChHad = (TH1F*)f1->FindObjectAny("optPureFakepfMu_ChHad_");
  OptPureFakepfMuChHad->Draw();
  OptPureFakepfMuChHad->GetXaxis()->SetTitle("Particle Flow Muon P_{T}(GeV)");
  OptPureFakepfMuChHad->GetXaxis()->SetLabelFont(42);
  OptPureFakepfMuChHad->GetXaxis()->SetTitleFont(42);
  OptPureFakepfMuChHad->GetYaxis()->SetTitle("Ch. Hadron Isolation for PureFake cut (rej Fake > 0.9)");
  OptPureFakepfMuChHad->GetYaxis()->SetLabelFont(42);
  OptPureFakepfMuChHad->GetYaxis()->SetTitleFont(42);
  OptPureFakepfMuChHad->SetMinimum(0);
  OptPureFakepfMuChHad->SetMaximum(50);
  c1->SaveAs("PureFakeCutForMuons_ChargedHadronIsolation_PF.gif");

  TH1F *OptPureFakepfMuNeHad = (TH1F*)f1->FindObjectAny("optPureFakepfMu_NeHad_");
  OptPureFakepfMuNeHad->Draw();
  OptPureFakepfMuNeHad->GetXaxis()->SetTitle("Particle Flow Muon P_{T}(GeV)");
  OptPureFakepfMuNeHad->GetXaxis()->SetLabelFont(42);
  OptPureFakepfMuNeHad->GetXaxis()->SetTitleFont(42);
  OptPureFakepfMuNeHad->GetYaxis()->SetTitle("N. Hadron Isolation for PureFake cut (rej Fake > 0.9)");
  OptPureFakepfMuNeHad->GetYaxis()->SetLabelFont(42);
  OptPureFakepfMuNeHad->GetYaxis()->SetTitleFont(42);
  OptPureFakepfMuNeHad->SetMinimum(0);
  OptPureFakepfMuNeHad->SetMaximum(50);
  c1->SaveAs("PureFakeCutForMuons_NeutralHadronIsolation_PF.gif");

  TH1F *OptPureFakepfMutot = (TH1F*)f1->FindObjectAny("optPureFakepfMu_tot_");
  OptPureFakepfMutot->Draw();
  OptPureFakepfMutot->GetXaxis()->SetTitle("Particle Flow Muon P_{T}(GeV)");
  OptPureFakepfMutot->GetXaxis()->SetLabelFont(42);
  OptPureFakepfMutot->GetXaxis()->SetTitleFont(42);
  OptPureFakepfMutot->GetYaxis()->SetTitle("Combined Isolation for PureFake cut (rej Fake > 0.9)");
  OptPureFakepfMutot->GetYaxis()->SetLabelFont(42);
  OptPureFakepfMutot->GetYaxis()->SetTitleFont(42);
  OptPureFakepfMutot->SetMinimum(0);
  OptPureFakepfMutot->SetMaximum(50);
  c1->SaveAs("PureFakeCutForMuons_CombinedIsolation_PF.gif");

  TH1F *OptPureFakepfMuGam = (TH1F*)f1->FindObjectAny("optPureFakepfMu_Gam_");
  OptPureFakepfMuGam->Draw();
  OptPureFakepfMuGam->GetXaxis()->SetTitle("Particle Flow Muon P_{T}(GeV)");
  OptPureFakepfMuGam->GetXaxis()->SetLabelFont(42);
  OptPureFakepfMuGam->GetXaxis()->SetTitleFont(42);
  OptPureFakepfMuGam->GetYaxis()->SetTitle("Gamma Isolation for PureFake cut (rej Fake > 0.9)");
  OptPureFakepfMuGam->GetYaxis()->SetLabelFont(42);
  OptPureFakepfMuGam->GetYaxis()->SetTitleFont(42);
  OptPureFakepfMuGam->SetMinimum(0);
  OptPureFakepfMuGam->SetMaximum(50);
  c1->SaveAs("PureFakeCutForMuons_GammaIsolation_PF.gif");
  /*
  TH1F *OptPureHFElECAL = (TH1F*)f1->FindObjectAny("optPureHFEl_ecal_");
  OptPureHFElECAL->Draw();
  OptPureHFElECAL->GetXaxis()->SetTitle("Standard RECO Electron P_{T}(GeV)");
  OptPureHFElECAL->GetXaxis()->SetLabelFont(42);
  OptPureHFElECAL->GetXaxis()->SetTitleFont(42);
  OptPureHFElECAL->GetYaxis()->SetTitle("Ecal Isolation for PureHF cut (rej HF > 0.9)");
  OptPureHFElECAL->GetYaxis()->SetLabelFont(42);
  OptPureHFElECAL->GetYaxis()->SetTitleFont(42);
  OptPureHFElECAL->SetMinimum(0);
  OptPureHFElECAL->SetMaximum(50);
  c1->SaveAs("PureHFCutForElectrons_EcalIsolation_SR.gif");

  TH1F *OptPureHFElHCAL = (TH1F*)f1->FindObjectAny("optPureHFEl_hcal_");
  OptPureHFElHCAL->Draw();
  OptPureHFElHCAL->GetXaxis()->SetTitle("Standard RECO Electron P_{T}(GeV)");
  OptPureHFElHCAL->GetXaxis()->SetLabelFont(42);
  OptPureHFElHCAL->GetXaxis()->SetTitleFont(42);
  OptPureHFElHCAL->GetYaxis()->SetTitle("Hcal Isolation for PureHF cut (rej HF > 0.9)");
  OptPureHFElHCAL->GetYaxis()->SetLabelFont(42);
  OptPureHFElHCAL->GetYaxis()->SetTitleFont(42);
  OptPureHFElHCAL->SetMinimum(0);
  OptPureHFElHCAL->SetMaximum(50);
  c1->SaveAs("PureHFCutForElectrons_HcalIsolation_SR.gif");

  TH1F *OptPureHFEltot = (TH1F*)f1->FindObjectAny("optPureHFEl_tot_");
  OptPureHFEltot->Draw();
  OptPureHFEltot->GetXaxis()->SetTitle("Standard RECO Electron P_{T}(GeV)");
  OptPureHFEltot->GetXaxis()->SetLabelFont(42);
  OptPureHFEltot->GetXaxis()->SetTitleFont(42);
  OptPureHFEltot->GetYaxis()->SetTitle("Combined Isolation for PureHF cut (rej HF > 0.9)");
  OptPureHFEltot->GetYaxis()->SetLabelFont(42);
  OptPureHFEltot->GetYaxis()->SetTitleFont(42);
  OptPureHFEltot->SetMinimum(0);
  OptPureHFEltot->SetMaximum(50);
  c1->SaveAs("PureHFCutForElectrons_CombinedIsolation_SR.gif");

  TH1F *OptPureHFEltrack = (TH1F*)f1->FindObjectAny("optPureHFEl_track_");
  OptPureHFEltrack->Draw();
  OptPureHFEltrack->GetXaxis()->SetTitle("Standard RECO Electron P_{T}(GeV)");
  OptPureHFEltrack->GetXaxis()->SetLabelFont(42);
  OptPureHFEltrack->GetXaxis()->SetTitleFont(42);
  OptPureHFEltrack->GetYaxis()->SetTitle("Track Isolation for PureHF cut (rej HF > 0.9)");
  OptPureHFEltrack->GetYaxis()->SetLabelFont(42);
  OptPureHFEltrack->GetYaxis()->SetTitleFont(42);
  OptPureHFEltrack->SetMinimum(0);
  OptPureHFEltrack->SetMaximum(50);
  c1->SaveAs("PureHFCutForElectrons_TrackIsolation_SR.gif");
  */
  TH1F *OptPureHFpfElChHad = (TH1F*)f1->FindObjectAny("optPureHFpfEl_ChHad_");
  OptPureHFpfElChHad->Draw();
  OptPureHFpfElChHad->GetXaxis()->SetTitle("Particle Flow Electron P_{T}(GeV)");
  OptPureHFpfElChHad->GetXaxis()->SetLabelFont(42);
  OptPureHFpfElChHad->GetXaxis()->SetTitleFont(42);
  OptPureHFpfElChHad->GetYaxis()->SetTitle("Ch. Hadron Isolation for PureHF cut (rej HF > 0.9)");
  OptPureHFpfElChHad->GetYaxis()->SetLabelFont(42);
  OptPureHFpfElChHad->GetYaxis()->SetTitleFont(42);
  OptPureHFpfElChHad->SetMinimum(0);
  OptPureHFpfElChHad->SetMaximum(50);
  c1->SaveAs("PureHFCutForElectrons_ChargedHadronIsolation_PF.gif");

  TH1F *OptPureHFpfElNeHad = (TH1F*)f1->FindObjectAny("optPureHFpfEl_NeHad_");
  OptPureHFpfElNeHad->Draw();
  OptPureHFpfElNeHad->GetXaxis()->SetTitle("Particle Flow Electron P_{T}(GeV)");
  OptPureHFpfElNeHad->GetXaxis()->SetLabelFont(42);
  OptPureHFpfElNeHad->GetXaxis()->SetTitleFont(42);
  OptPureHFpfElNeHad->GetYaxis()->SetTitle("N. Hadron Isolation for PureHF cut (rej HF > 0.9)");
  OptPureHFpfElNeHad->GetYaxis()->SetLabelFont(42);
  OptPureHFpfElNeHad->GetYaxis()->SetTitleFont(42);
  OptPureHFpfElNeHad->SetMinimum(0);
  OptPureHFpfElNeHad->SetMaximum(50);
  c1->SaveAs("PureHFCutForElectrons_NeutralHadronIsolation_PF.gif");

  TH1F *OptPureHFpfEltot = (TH1F*)f1->FindObjectAny("optPureHFpfEl_tot_");
  OptPureHFpfEltot->Draw();
  OptPureHFpfEltot->GetXaxis()->SetTitle("Particle Flow Electron P_{T}(GeV)");
  OptPureHFpfEltot->GetXaxis()->SetLabelFont(42);
  OptPureHFpfEltot->GetXaxis()->SetTitleFont(42);
  OptPureHFpfEltot->GetYaxis()->SetTitle("Combined Isolation for PureHF cut (rej HF > 0.9)");
  OptPureHFpfEltot->GetYaxis()->SetLabelFont(42);
  OptPureHFpfEltot->GetYaxis()->SetTitleFont(42);
  OptPureHFpfEltot->SetMinimum(0);
  OptPureHFpfEltot->SetMaximum(50);
  c1->SaveAs("PureHFCutForElectrons_CombinedIsolation_PF.gif");

  TH1F *OptPureHFpfElGam = (TH1F*)f1->FindObjectAny("optPureHFpfEl_Gam_");
  OptPureHFpfElGam->Draw();
  OptPureHFpfElGam->GetXaxis()->SetTitle("Particle Flow Electron P_{T}(GeV)");
  OptPureHFpfElGam->GetXaxis()->SetLabelFont(42);
  OptPureHFpfElGam->GetXaxis()->SetTitleFont(42);
  OptPureHFpfElGam->GetYaxis()->SetTitle("Gamma Isolation for PureHF cut (rej HF > 0.9)");
  OptPureHFpfElGam->GetYaxis()->SetLabelFont(42);
  OptPureHFpfElGam->GetYaxis()->SetTitleFont(42);
  OptPureHFpfElGam->SetMinimum(0);
  OptPureHFpfElGam->SetMaximum(50);
  c1->SaveAs("PureHFCutForElectrons_GammaIsolation_PF.gif");
  /*
  TH1F *OptPureHFMuECAL = (TH1F*)f1->FindObjectAny("optPureHFMu_ecal_");
  OptPureHFMuECAL->Draw();
  OptPureHFMuECAL->GetXaxis()->SetTitle("Standard RECO Muon P_{T}(GeV)");
  OptPureHFMuECAL->GetXaxis()->SetLabelFont(42);
  OptPureHFMuECAL->GetXaxis()->SetTitleFont(42);
  OptPureHFMuECAL->GetYaxis()->SetTitle("Ecal Isolation for PureHF cut (rej HF > 0.9)");
  OptPureHFMuECAL->GetYaxis()->SetLabelFont(42);
  OptPureHFMuECAL->GetYaxis()->SetTitleFont(42);
  OptPureHFMuECAL->SetMinimum(0);
  OptPureHFMuECAL->SetMaximum(50);
  c1->SaveAs("PureHFCutForMuons_EcalIsolation_SR.gif");

  TH1F *OptPureHFMuHCAL = (TH1F*)f1->FindObjectAny("optEffMu_hcal_");
  OptPureHFMuHCAL->Draw();
  OptPureHFMuHCAL->GetXaxis()->SetTitle("Standard RECO Muon P_{T}(GeV)");
  OptPureHFMuHCAL->GetXaxis()->SetLabelFont(42);
  OptPureHFMuHCAL->GetXaxis()->SetTitleFont(42);
  OptPureHFMuHCAL->GetYaxis()->SetTitle("Hcal Isolation for PureHF cut (rej HF > 0.9)");
  OptPureHFMuHCAL->GetYaxis()->SetLabelFont(42);
  OptPureHFMuHCAL->GetYaxis()->SetTitleFont(42);
  OptPureHFMuHCAL->SetMinimum(0);
  OptPureHFMuHCAL->SetMaximum(50);
  c1->SaveAs("PureHFCutForMuons_HcalIsolation_SR.gif");

  TH1F *OptPureHFMutot = (TH1F*)f1->FindObjectAny("optPureHFMu_tot_");
  OptPureHFMutot->Draw();
  OptPureHFMutot->GetXaxis()->SetTitle("Standard RECO Muon P_{T}(GeV)");
  OptPureHFMutot->GetXaxis()->SetLabelFont(42);
  OptPureHFMutot->GetXaxis()->SetTitleFont(42);
  OptPureHFMutot->GetYaxis()->SetTitle("Combined Isolation for PureHF cut (rej HF > 0.9)");
  OptPureHFMutot->GetYaxis()->SetLabelFont(42);
  OptPureHFMutot->GetYaxis()->SetTitleFont(42);
  OptPureHFMutot->SetMinimum(0);
  OptPureHFMutot->SetMaximum(50);
  c1->SaveAs("PureHFCutForMuons_CombinedIsolation_SR.gif");

  TH1F *OptPureHFMutrack = (TH1F*)f1->FindObjectAny("optPureHFMu_track_");
  OptPureHFMutrack->Draw();
  OptPureHFMutrack->GetXaxis()->SetTitle("Standard RECO Muon P_{T}(GeV)");
  OptPureHFMutrack->GetXaxis()->SetLabelFont(42);
  OptPureHFMutrack->GetXaxis()->SetTitleFont(42);
  OptPureHFMutrack->GetYaxis()->SetTitle("Track Isolation for PureHF cut (rej HF > 0.9)");
  OptPureHFMutrack->GetYaxis()->SetLabelFont(42);
  OptPureHFMutrack->GetYaxis()->SetTitleFont(42);
  OptPureHFMutrack->SetMinimum(0);
  OptPureHFMutrack->SetMaximum(50);
  c1->SaveAs("PureHFCutForMuons_TrackIsolation_SR.gif");
  */
  TH1F *OptPureHFpfMuChHad = (TH1F*)f1->FindObjectAny("optPureHFpfMu_ChHad_");
  OptPureHFpfMuChHad->Draw();
  OptPureHFpfMuChHad->GetXaxis()->SetTitle("Particle Flow Muon P_{T}(GeV)");
  OptPureHFpfMuChHad->GetXaxis()->SetLabelFont(42);
  OptPureHFpfMuChHad->GetXaxis()->SetTitleFont(42);
  OptPureHFpfMuChHad->GetYaxis()->SetTitle("Ch. Hadron Isolation for PureHF cut (rej HF > 0.9)");
  OptPureHFpfMuChHad->GetYaxis()->SetLabelFont(42);
  OptPureHFpfMuChHad->GetYaxis()->SetTitleFont(42);
  OptPureHFpfMuChHad->SetMinimum(0);
  OptPureHFpfMuChHad->SetMaximum(50);
  c1->SaveAs("PureHFCutForMuons_ChargedHadronIsolation_PF.gif");

  TH1F *OptPureHFpfMuNeHad = (TH1F*)f1->FindObjectAny("optPureHFpfMu_NeHad_");
  OptPureHFpfMuNeHad->Draw();
  OptPureHFpfMuNeHad->GetXaxis()->SetTitle("Particle Flow Muon P_{T}(GeV)");
  OptPureHFpfMuNeHad->GetXaxis()->SetLabelFont(42);
  OptPureHFpfMuNeHad->GetXaxis()->SetTitleFont(42);
  OptPureHFpfMuNeHad->GetYaxis()->SetTitle("N. Hadron Isolation for PureHF cut (rej HF > 0.9)");
  OptPureHFpfMuNeHad->GetYaxis()->SetLabelFont(42);
  OptPureHFpfMuNeHad->GetYaxis()->SetTitleFont(42);
  OptPureHFpfMuNeHad->SetMinimum(0);
  OptPureHFpfMuNeHad->SetMaximum(50);
  c1->SaveAs("PureHFCutForMuons_NeutralHadronIsolation_PF.gif");

  TH1F *OptPureHFpfMutot = (TH1F*)f1->FindObjectAny("optPureHFpfMu_tot_");
  OptPureHFpfMutot->Draw();
  OptPureHFpfMutot->GetXaxis()->SetTitle("Particle Flow Muon P_{T}(GeV)");
  OptPureHFpfMutot->GetXaxis()->SetLabelFont(42);
  OptPureHFpfMutot->GetXaxis()->SetTitleFont(42);
  OptPureHFpfMutot->GetYaxis()->SetTitle("Combined Isolation for PureHF cut (rej HF > 0.9)");
  OptPureHFpfMutot->GetYaxis()->SetLabelFont(42);
  OptPureHFpfMutot->GetYaxis()->SetTitleFont(42);
  OptPureHFpfMutot->SetMinimum(0);
  OptPureHFpfMutot->SetMaximum(50);
  c1->SaveAs("PureHFCutForMuons_CombinedIsolation_PF.gif");

  TH1F *OptPureHFpfMuGam = (TH1F*)f1->FindObjectAny("optPureHFpfMu_Gam_");
  OptPureHFpfMuGam->Draw();
  OptPureHFpfMuGam->GetXaxis()->SetTitle("Particle Flow Muon P_{T}(GeV)");
  OptPureHFpfMuGam->GetXaxis()->SetLabelFont(42);
  OptPureHFpfMuGam->GetXaxis()->SetTitleFont(42);
  OptPureHFpfMuGam->GetYaxis()->SetTitle("Gamma Isolation for PureHF cut (rej HF > 0.9)");
  OptPureHFpfMuGam->GetYaxis()->SetLabelFont(42);
  OptPureHFpfMuGam->GetYaxis()->SetTitleFont(42);
  OptPureHFpfMuGam->SetMinimum(0);
  OptPureHFpfMuGam->SetMaximum(50);
  c1->SaveAs("PureHFCutForMuons_GammaIsolation_PF.gif");



}
