{
  TFile* f1 = TFile::Open("/Users/aocampor/Desktop/PAT_vs_PF/root_files/nutples/TOT/OUTPUT/CONE0.1/TOT_cone0.1.root");
  TH1F* h1 = (TH1F*)f1->FindObjectAny("BackNpfEl");
  int back1 = h1->GetBinContent(2);
  cout << "back :" << back1 << endl;
  h1 = (TH1F*)f1->FindObjectAny("SignalNpfEl");
  int sig1 = h1->GetBinContent(2);
  cout << "signal :" << sig1 << endl;
  float r[5],sig[5];
  r[0]=0.1;
  r[1]=0.2;
  r[2]=0.3;
  r[3]=0.4;
  r[4]=0.5;
  sig[1]=0;
  sig[2]=0;
  sig[3]=0;
  sig[4]=0;
  sig[0]=(float)sig1/back1;
  cout << "value :" << sig[0] << endl;
  TFile*  f2 = TFile::Open("/Users/aocampor/Desktop/PAT_vs_PF/root_files/nutples/TOT/OUTPUT/CONE0.2/TOT_cone0.2.root");
  h1 = (TH1F*)f2->FindObjectAny("BackNpfEl");
  back1 = h1->GetBinContent(2);
  cout << "back :" << back1 << endl;
  h1 = (TH1F*)f2->FindObjectAny("SignalNpfEl");
  sig1 = h1->GetBinContent(2);
  sig[1]=(float)sig1/back1;
  cout << "signal :" << sig1 << endl;
  cout << "value :" << sig[1] << endl;
  f1 = TFile::Open("/Users/aocampor/Desktop/PAT_vs_PF/root_files/nutples/TOT/OUTPUT/CONE0.3/TOT_cone0.3.root");
  h1 = (TH1F*)f1->FindObjectAny("BackNpfEl");
  back1 = h1->GetBinContent(2);
  h1 = (TH1F*)f1->FindObjectAny("SignalNpfEl");
  sig1 = h1->GetBinContent(2);
  sig[2]=(float)sig1/back1;
  cout << "value :" << sig[2] << endl;
  f1 = TFile::Open("/Users/aocampor/Desktop/PAT_vs_PF/root_files/nutples/TOT/OUTPUT/CONE0.4/TOT_cone0.4.root");
  h1 = (TH1F*)f1->FindObjectAny("BackNpfEl");
  back1 = h1->GetBinContent(2);
  h1 = (TH1F*)f1->FindObjectAny("SignalNpfEl");
  sig1 = h1->GetBinContent(2);
  sig[3]=(float)sig1/back1;
  cout << "value :" << sig[3] << endl;
  f1 = TFile::Open("/Users/aocampor/Desktop/PAT_vs_PF/root_files/nutples/TOT/OUTPUT/CONE0.5/TOT_cone0.5.root");
  h1 = (TH1F*)f1->FindObjectAny("BackNpfEl");
  back1 = h1->GetBinContent(2);
  h1 = (TH1F*)f1->FindObjectAny("SignalNpfEl");
  sig1 = h1->GetBinContent(2);
  sig[4]=(float)sig1/back1;
  cout << "value :" << sig[4] << endl;
  TGraph* fin = new TGraph(5,r,sig);
  fin->Draw("ACP*");
}
